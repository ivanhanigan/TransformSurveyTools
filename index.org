#+TITLE:Transformations Survey Tools 
#+AUTHOR: Ivan Hanigan
#+email: ivan.hanigan@anu.edu.au
#+LaTeX_CLASS: article
#+LaTeX_CLASS_OPTIONS: [a4paper]
#+LATEX: \tableofcontents
-----

* Introduction

#+name:install-tools
#+begin_src R :session *R* :tangle inst/doc/main.r :eval no
  ################################################################
  # This is documentation for tools I'm using to analyse survey data
  # about Transformational Adaptation, and an associated R package I'm
  # developing to build new tools.
  require(devtools)
  install_github("TransformSurveyTools", "ivanhanigan")
  require(TransformSurveyTools)
#+end_src

The structure of this document follows [[http://stackoverflow.com/a/1434424][Reichian LCFD approach]]. 
* General methods
** Understanding a survey
- A flow chart of how a user gains understanding of surveys
- What to look for in a user guide.

*** Flow chart 
- Step 1: Identify
  + the population, sample and variables
  + panels / waves? comparability over time
  + margin of error or anything relating to uncertainty (population and sample sizes)
  + bias: non-response bias, sampling-frame bias and self-reporting bias
  + weighting
- Step 2: Access
  - 

* Functions
** foreign

#+name:foreign
#+begin_src R :session *R* :tangle inst/doc/main.r :eval no
################################################################
# name:foreign
require(foreign)
#+end_src
   
** TreeTools

#+name:main
#+begin_src R :session *R* :tangle inst/doc/main.r :eval no
  ################################################################
  require(tree)
  require(rpart)
  require(party) 
  require(partykit) 
  
#+end_src

* Load
** read.spss

#+name:main
#+begin_src R :session *R* :tangle inst/doc/main.r :eval no
  ################################################################
  # name:main
  filename  <- "fname.sav"
  analyte  <- read.spss(filename, to.data.frame=T)
  # ignore warnings
  # str(analyte)
  # names(analyte)
  variable_labels <- attributes(analyte)$variable.labels

#+end_src

* Clean
** ReportTools: Descriptive Statistics
A really important aspect to analysing survey data is a table of descriptive statistics.  Luckily the reporttools package is here to help.  The result of the following code is a LaTeX report which you can see in the file 
*** report-code
#+name:report
#+begin_src R :session *R* :eval yes
system.file(file.path("doc", "report.pdf"), package = "TransformSurveyTools")
#+end_src
[[http://ivanhanigan.github.io/TransformSurveyTools/inst/doc/report.pdf][doc/report.pdf]]


*** all variables table
#+name:tableCode
#+begin_src R :session *R* :tangle no :eval yes
  ################################################################
  # func
  if(!require(reporttools)) install.packages("reporttools"); require(reporttools)
  require(devtools)
  install_github("TransformSurveyTools", "ivanhanigan")
  require(TransformSurveyTools)
  # load
  fpath <- system.file(file.path("extdata", "civst_gend_sector_full.csv"), package = "TransformSurveyTools")
  analyte <- read.csv(fpath)
  analyte$random <- rnorm(nrow(analyte), 0 , 1)
  for(i in 1:75)
    {
      analyte[,ncol(analyte) + 1] <- rnorm(nrow(analyte), 10 , 20)    
    }
  names(analyte)
  str(analyte)
  data_continuous <- numeric(0) 
  for(i in 1:length(names(analyte)))
    {
      if(is.numeric(analyte[,i]))
          {
              data_continuous <- c(data_continuous, i)
          }
    }
  # clean        
  str(analyte[,data_continuous])
  str(analyte[,-data_continuous])
  # do
  sink('inst/doc/tab4.tex')
  tableContinuous(vars = analyte[,data_continuous],
                  stats = c("n", "min", "mean", "median",
                    "max", "iqr", "na"),
                  cap = "Table of continuous variables.", lab = "tab:table4",
                  caption.placement = "top",
                  longtable = TRUE, add.to.row = list(pos = list(0), 
                  command = "\\hline \\endhead "))
  sink()
  
  x.big <- analyte[,-data_continuous]
  sink('inst/doc/tab5.tex')
  tableNominal(vars = x.big, cap = "Table of nominal variables",
               vertical = FALSE,
               lab = "tab:table5", longtable = TRUE,
               caption.placement = "top")
  
  sink()
     
#+end_src

#+RESULTS: tableCode


** TODO Recoding: collapse into smaller groups (e.g. Trichotomise to low, med, high)
https://www.isixsigma.com/topic/margin-of-errorci-for-ordinal-data/#post-110267
What some consultants in marketing research do is to collapse the
categories and then build confidence intervals around these
categories. For example: they often combine 7/6, 5/4 and 1/2/3 and
construct the interval around those three categories. While this
defeats the original purpose of the Likert scale (approximating an
interval scale) it has the advantage of being easy to comprehend by
management. You can then run proportion difference tests on each of
the three categories over time. Consultants typically donâ€™t even
adjust the alpha level for the fact that now you are running three
tests instead of 1 test. Also, many executives care more about your
top two and bottom three categories (on a 7-point Likert scale) than
anything that is in the middle. This approach is only used when you
have at least 7 categories. For a 10-point Likert scale the groupings
are: 1/2/3/4, 5/6, 7/8, 9/10.

also see
http://www.measuringu.com/blog/top-box.php

Top-two-box scoring is popular for rating scales with between 7 and 11
points. For example, the 11 point Net Promoter Question "How likely
are you to recommend this product to a friend" has the top-two boxes
of 9 and 10. The top-two-box responses are called "promoters," and
responses from 0 to 6 (bottom 7) are called "detractors."  The Net
Promoter Score gets its name from subtracting the proportion of
detractors from promoters.
** Reshape: To Long
** Reshape: To Wide
** Summarise
* Do
** Demonstration of Recursive Partitioning Trees (rpart) and Condition trees (ctree)
*** COMMENT demo
#+name:demo
#+begin_src R :session *R* :tangle inst/doc/rpart-demo-with-party-civil-status.R :exports none :eval no :padline no
library(rpart)
library(partykit)

df <- read.csv("civst_gend_sector_full.csv")
# clean
nrow(df)
str(df)
fit1 <- rpart(civil_status ~ gender + activity_sector, data = df)
summary(fit1)

# report
par(xpd = NA) # to avoid text clipping at edge
plot(fit1)
text(fit1, use.n = TRUE)
title("fit1")
# a modern display via the party package
plot(as.party(fit1))

# and with the party package they implement a conditional inference framework.  
fitc <- ctree(civil_status ~ gender + activity_sector, data = df)
plot(fitc)

#+end_src

** Misclassification Error Rate for Classification Trees
** Deviance Based Measures of Descriptive Power for Classification Trees
*** Computing-and-using-deviance-with-classification-trees-Ritschard, G. (2006).
I'm reading Ritschard, G. (2006). Computing and using the deviance with classification trees. In Compstat 2006 - Proceedings in Computational Statistics 17th Symposium Held in Rome, Italy, 2006. Retrieved from http://link.springer.com/chapter/10.1007%2F978-3-7908-1709-6_5

This is implemented in SPSS code. I'll try to develop R code to do these tests.

First I'll get the data out of their paper and fit the tree in figure 1

*** sample-tree-data
#+name:tree-deviance
#+begin_src R :session *R* :tangle inst/doc/tree-data.r :eval no
  #########################################
  # func
  require(rpart)
  require(partykit) 
  
  # load
  civst_gend_sector  <- read.csv(textConnection(
      "civil_status gender activity_sector number_of_cases
           married   male         primary              50
           married   male       secondary              40
           married   male        tertiary               6
           married female         primary               0
           married female       secondary              14
           married female        tertiary              10
            single   male         primary               5
            single   male       secondary               5
            single   male        tertiary              12
            single female         primary              50
            single female       secondary              30
            single female        tertiary              18
  divorced/widowed   male         primary               5
  divorced/widowed   male       secondary               8
  divorced/widowed   male        tertiary              10
  divorced/widowed female         primary               6
  divorced/widowed female       secondary               2
  divorced/widowed female        tertiary               2
  "),sep = "")
  # save this for use later
  dir.create("inst/extdata", recursive=T)
  write.csv(civst_gend_sector, "inst/extdata/civst_gend_sector.csv", row.names = F)
  # clean
  str(civst_gend_sector)
  
  # do
  fit <- rpart(civil_status ~ gender + activity_sector,
               data = civst_gend_sector, weights = number_of_cases,
               control=rpart.control(minsplit=1))
  # NB need minsplit to be adjusted for weights.
  summary(fit)
    
  # report
  plot(fit, margin=.1)
  text(fit, use.n = TRUE)
  title("fit")
  
  # nicer plots
  png("images/fit1.png", 1000, 480)
  plot(as.party(fit))
  dev.off()  
#+end_src
*** COMMENT cuts
**** COMMENT DEPRECATED get-data-from-pdf-code
#+name:get-data-from-pdf
#+begin_src R :session *R* :tangle no :exports none :eval no
  ################################################################
  # name:get-data-from-pdf
  # these data are in a table in the pdf but not that easy to copy and paste.
  gender <- c("male", 
  "male", 
  "male", 
  "female",
  "female",
  "female",
  "male",
  "male",
  "male",
  "female",
  "female",
  "female",
  "male", 
  "male", 
  "male", 
  "female",
  "female",
  "female")
  
  civil_status <- c("married", "married", "married", "married", "married", "married",
  "single", "single", "single", "single", "single", "single",
  "divorced/widowed", "divorced/widowed", "divorced/widowed", "divorced/widowed",
  "divorced/widowed", "divorced/widowed")
  
  activity_sector <- c("primary",
  "secondary","tertiary","primary",
  "secondary","tertiary","primary",
  "secondary","tertiary","primary",
  "secondary","tertiary","primary",
  "secondary","tertiary","primary",
  "secondary","tertiary")
  
  number_of_cases <- c(50, 40, 6, 0,
  14, 10, 5, 5,
  12, 50, 30, 18, 5, 8,
  10, 6, 2, 2)
  
  ls()
  civst_gend_sector <- as.data.frame(cbind(civil_status, gender, activity_sector, number_of_cases))
  
  # clean
  civst_gend_sector[4:6,]
  civst_gend_sector$number_of_cases <- as.numeric(as.character(civst_gend_sector$number_of_cases))
  civst_gend_sector  
  
  
#+end_src
*** Reproduce the figure from the paper
The figure in the paper can be checked against our results (and also the improved plot from the party package might be used).

[[file:images/fit1.png]]
*** One row per case or using weights?
Using the case weights like above is convenient especially when datasets are very large, but caused problems in model fitting for me (tree failed to compute a deviance when done this way but succeeded with a dataset expanded so the data.frame is transformed into one in which each row is an observation.
#+name:reassurance-re-weights
#+begin_src R :session *R* :tangle inst/doc/tree-data2.r :eval no
  ################################################################
  # name:reassurance-re-weights
   
  # just to reasure myself I understand what case weights do, I'll make
  # this into a survey dataset with one row per respondent
  df <- as.data.frame(matrix(NA, nrow = 0, ncol = 3))
  for(i in 1:nrow(civst_gend_sector))
      {
      #    i <- 1
          n <- civst_gend_sector$number_of_cases[i]
          if(n == 0) next
          for(j in 1:n)
              {
                df <- rbind(df, civst_gend_sector[i,1:3])              
              }
   
      }
  # save this for use later
  write.csv(df, "inst/extdata/civst_gend_sector_full.csv", row.names = F)
  # clean
  nrow(df)
  str(df)
  fit1 <- rpart(civil_status ~ gender + activity_sector, data = df)
  summary(fit1)
  
  # report
  par(mfrow=c(1,2), xpd = NA) 
  plot(fit)
  text(fit, use.n = TRUE)
  title("fit")
  plot(fit1)
  text(fit1, use.n = TRUE)
  title("fit1")
  # great these are the same which is what we'd hoped to see
  
#+end_src

*** Chisquare test of deviance for Classification trees
I want to use the deviance as well as the misclassification error rate for measuring the descriptive power of the tree.  Using the tree package we can access the deviance of the fitted Classification tree.  Ripley's tree package is the only one I found to give me deviance for classification trees, the other packages only return this for regression trees.

If we look at the reduction in deviance between the Null model and the fitted tree we can say that the tree explains about XYZ% of the variation. We can also test if this is a statistically significant reduction (based on a chi-squared test), but should also comment about how much explanation this is in practical terms.

*** COMMENT cut
The attached papers suggest a method to test differences between nested trees ie testing the difference with the root node with a Chi-square statistic (equivalent of the usual method used in logistic regression).
*** COMMENT reminder-of-method-in-logistic-regression-code
#+name:reminder-of-method-in-logistic-regression
#+begin_src R :session *R* :tangle no :exports none :eval no
  ################################################################
  # name:reminder-of-method-in-logistic-regression
  # rewritten from http://data.princeton.edu/r/glms.html
  require(foreign)
  require(reshape)
  require(plyr)
  
  cuse <- read.dta("http://data.princeton.edu/wws509/datasets/cuse.dta")                  
  str(cuse)
  head(cuse)
  d2 <- cast(cuse,  age + educ + desire ~ cuse, value = 'n')
  head(arrange(d2, age, educ))
  d2
  lrfit <- glm(cbind(Yes, No) ~ age + educ + desire, data = d2, family = binomial)
  lrfit
  
  ## Recall that R sorts the levels of a factor in alphabetical order. Because <25 comes before 25-29, 30-39, and 40-49, it has been picked as the reference cell for age. Similarly, high is the reference cell for education because high comes before low! Finally, R picked no as the base for wantsMore.
  
  ## If you are unhappy about these choices you can (1) use relevel to change the base category, or (2) define your own indicator variables. I will use the latter approach by defining indicators for women with high education and women who want no more children:
  
  d2$noMore <- d2$desire == "Wants no more"
  d2$hiEduc <- d2$educ == "Some"
  
  
  lrfit <- glm(cbind(Yes, No) ~  age + hiEduc + noMore, data = d2, family = binomial)
  lrfit
  
  str(summary(lrfit))
#+end_src


*** TODO Check This: R function to calculate for classification trees
The Ritschard (2006) paper (with SPSS code) describes a complicated method that includes Needing to retrieve for each case: 
- leaf number and
- profile number

I really want to use the deviance as well as the misclassification error rate for measuring the descriptive power of the tree.
Ripley's tree package is the only one I found to give me deviance for classification trees.

The Ritschard papers suggest nice methods to test differences between nested trees ie testing the difference with the root node with a Chi-square statistic (equivalent of the usual method used in logistic regression).

Is this method employed widely in analysing survey data?
I haven't turned up many references to Ritschard since he wrote these.

So let's start simple first.  The following code follows the simpler approach:
- Take the difference in the deviance for the models (less complex model minus more complex model)
- Take the difference in degrees of freedom for the models
- difference between less complex and more complex model follows chi-square distribution

*** COMMENT http://www.stat.ufl.edu/~winner/sta6127/chapter15.ppt
slide 22 
Two statistics are used to test whether a model is appropriate: the Pearson chi-square statistic and the likelihood ratio (aka Deviance) statistic
slide 28
Under hypothesis that less complex (reduced) model is adequate, difference follows chi-square distribution
*** R-tree.chisq
*** R code
#+name:tree.chisq
#+begin_src R :session *R* :tangle R/tree.chisq.r :eval no
  ################################################################
  # name:tree.chisq
  tree.chisq <- function(null_model, fitted_model)
  {
      # TODO check if these are tree model class
      fit_dev  <- summary(fitted_model)$dev
      null_dev  <- summary(null_model)$dev    
      dev  <-  null_dev - fit_dev
      df  <- summary(fitted_model)$size - summary(null_model)$size
      sig  <- 1 - pchisq(dev, df)
      sprintf("Reduction in deviance is %s percent, p-value is %s (based on a chi-squared test)",
              ((null_dev - fit_dev) / null_dev) * 100,
              sig)
  }
  
#+end_src
*** test-tree.chisq
#+name:tree.chisq
#+begin_src R :session *R* :tangle tests/test-tree.chisq.r :eval no
  # func
  require(tree)
  require(devtools)
  install_github("TransformSurveyTools", "ivanhanigan")
  require(TransformSurveyTools)
  # load locally
  # fpath  <- "inst/extdata/civst_gend_sector_full.csv"
  # or via package
  fpath <- system.file("extdata", "civst_gend_sector_full.csv", package="TransformSurveyTools")
  civst_gend_sector  <- read.csv(fpath)
  
  # clean
  str(civst_gend_sector)
  
  # do
  variables  <- names(civst_gend_sector)
  y_variable  <- variables[1]
  x_variables  <- variables[-1]
  
  # NULL
  form0  <- reformulate("1",
                        response = y_variable)
  form0
  model0 <- tree(form0, data = civst_gend_sector, method = "class")
  print(model0)
  # FIT
  form1  <- reformulate(x_variables,
                        response = y_variable)
  form1
  model1 <- tree(form1, data = civst_gend_sector, method = "class")
  print(model1)
  summary(model1)
  plot(model1)
  text(model1,pretty = 0)
  tree.chisq(null_model = model0, fitted_model = model1)
    
#+end_src
**** COMMENT test- deprecated - broken
#+begin_src R :session *R* :tangle tests/test-tree.chisq.r :exports none :eval no
  ################################################################
  # name:tree.chisq
  # func
  require(tree)
  
  # load
  fpath  <- "inst/extdata/civst_gend_sector.csv"
  # or
  #fpath <- system.file("extdata", "my_raw_data.csv",
  # package="my_package")
  civst_gend_sector  <- read.csv(fpath)
  
  # clean
  str(civst_gend_sector)
  
  # do
  variables  <- names(civst_gend_sector)
  y_variable  <- variables[1]
  x_variables  <- variables[-c(1,4)]
  weight  <- civst_gend_sector[,variables[4]]
  # NULL
  form0  <- reformulate("1",
                        response = y_variable)
  form0
  model0 <- tree(form0, data = civst_gend_sector, method = "class", weights = weight)
  # FIT
  form1  <- reformulate(x_variables,
                        response = y_variable)
  form1
  model1 <- tree(form1, data = civst_gend_sector, method = "class", weights = weight)
  # this produces a NaN on node 4!
  ## > model1 <- tree(form1, data = civst_gend_sector, method = "class", weights = weight)
  ## > print(model1)
  ## node), split, n, deviance, yval, (yprob)
  ##       * denotes terminal node
  
  ## 1) root 273 534.00 married ( 0.12088 0.43956 0.43956 )  
  ##   2) gender: female 132 191.80 single ( 0.07576 0.18182 0.74242 )  
  ##     4) activity_sector: primary 56    NaN single ( 0.10714 0.00000 0.89286 ) *
  ##     5) activity_sector: secondary,tertiary 76 123.00 single ( 0.05263 0.31579 0.63158 ) *
  ##   3) gender: male 141 239.00 married ( 0.16312 0.68085 0.15603 )  
  ##     6) activity_sector: primary,secondary 113 145.70 married ( 0.11504 0.79646 0.08850 ) *
  ##     7) activity_sector: tertiary 28  59.41 single ( 0.35714 0.21429 0.42857 ) *
  model1 <- tree(form1, data = df, method = "class")
  ## > print(model1)
  ## node), split, n, deviance, yval, (yprob)
  ##       * denotes terminal node
  
  ## 1) root 273 534.00 married ( 0.12088 0.43956 0.43956 )  
  ##   2) gender: female 132 191.80 single ( 0.07576 0.18182 0.74242 )  
  ##     4) activity_sector: primary 56  38.14 single ( 0.10714 0.00000 0.89286 ) *
  ##     5) activity_sector: secondary,tertiary 76 123.00 single ( 0.05263 0.31579 0.63158 ) *
  ##   3) gender: male 141 239.00 married ( 0.16312 0.68085 0.15603 )  
  ##     6) activity_sector: primary,secondary 113 145.70 married ( 0.11504 0.79646 0.08850 ) *
  ##     7) activity_sector: tertiary 28  59.41 single ( 0.35714 0.21429 0.42857 ) *
  ## > 
  model1 <- tree(form1, data = df, method = "class")
  print(model1)
  plot(model1)
  # can't plot if used civst_gender_sector
  text(model1,pretty = NULL)
  
  
#+end_src
**** COMMENT man-tree.chisq
#+name:tree.chisq
#+begin_src R :session *R* :tangle no :exports none :eval no
################################################################
# name:tree.chisq

#+end_src
*** main-tree-model
#+name:tree.chisq
#+begin_src R :session *R* :tangle inst/doc/main.r :eval no
source("tests/test-tree.chisq.r")
#+end_src
** using rules
*** funcs for using rules
#+name:using rules
#+begin_src R :session *R* :tangle no :exports none :eval yes
#### name:using rules ####
# http://www.togaware.com/datamining/survivor/Convert_Tree.html
list.rules.rpart <- function(model)
{
  if (!inherits(model, "rpart")) stop("Not a legitimate rpart tree")
  #
  # Get some information.
  #
  frm     <- model$frame
  names   <- row.names(frm)
  ylevels <- attr(model, "ylevels")
  ds.size <- model$frame[1,]$n
  #
  # Print each leaf node as a rule.
  #
  for (i in 1:nrow(frm))
  {
    if (frm[i,1] == "<leaf>")
    {
      # The following [,5] is hardwired - needs work!
      cat("\n")
      cat(sprintf(" Rule number: %s ", names[i]))
      cat(sprintf("[yval=%s cover=%d (%.0f%%) prob=%0.2f]\n",
                  ylevels[frm[i,]$yval], frm[i,]$n,
                  round(100*frm[i,]$n/ds.size), frm[i,]$yval2[,5]))
      pth <- path.rpart(model, nodes=as.numeric(names[i]), print.it=FALSE)
      cat(sprintf("   %s\n", unlist(pth)[-1]), sep="")
    }
  }
}
# hacked to allow subsetting of the data frame to look at the contents
# of a terminal node
list.rules.rpart2 <- function(
  model=fit2
  )
{
  if (!inherits(model, "rpart")) stop("Not a legitimate rpart tree")
  #
  # Get some information.
  #
  datname <- model$call["data"]
  frm     <- model$frame
  names   <- row.names(frm)
  ylevels <- attr(model, "ylevels")
  ds.size <- model$frame[1,]$n
  #
  # Print each leaf node as a rule.
  #
  for (i in 1:nrow(frm))
  {
    if (frm[i,1] == "<leaf>")
    {
      print(i)
      # The following [,5] is hardwired - needs work!
      cat("\n")
      cat(sprintf(" Rule number: %s ", names[i]))
      cat(sprintf("[yval=%s cover=%d (%.0f%%) prob=%0.2f]\n",
                  ylevels[frm[i,]$yval], frm[i,]$n,
                  round(100*frm[i,]$n/ds.size), frm[i,]$yval2[,5]))
      pth <- path.rpart(model, nodes=as.numeric(names[i]), print.it=FALSE)
      cat(sprintf("   %s\n", unlist(pth)[-1]), sep="")
      txt <- paste(datname,"[",datname,"$",
                   paste(unlist(pth)[-1], sep="", collapse = paste("\n & ",datname,"$", sep = ""))
                   ,
                   ",]", sep = "")
      cat(txt)
      df <- eval(
        parse(text = txt)
        )
      cat("\n")
      print(disentangle::data_dict(df, as.character(model$terms[[2]])))
    }
  }
}

#+end_src

#+RESULTS: using

*** COMMENT test using rules
#+name:test using rules
#+begin_src R :session *R* :tangle no :exports none :eval no
  #### name:test using rules ####
  fit2 <- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis)
  plot(fit2)
  text(fit2)
  list.rules.rpart(fit2)
  list.rules.rpart2(fit2)
#+end_src
*** set up for rules2subset func
#+name:test
#+begin_src R :session *R* :tangle test.R :exports none :eval yes
  #### name:test ####
  library(readxl)
  rulesdf <- read_excel("/home/ivan_hanigan/ownCloud/Regional Wellbeing Study/RWSurvey 2015/RWS Data Cleaning/CleaningIH/decision_tree_for_piping_logic3.xlsx")
  rulesdf <- rulesdf[1:6,1:4]
  rulesdf
  #dat[] <- lapply(dat, as.character)
  
  #str(dat)
  
#+end_src

#+RESULTS: test
| Rule 1 | PANEL == 'Online Panel' | cNATDISdroughthappen12mo == 'Yes' | (cFMRassistmgefarm == 'Yes'                            | cFMRmanagefarm == 'Yes') |
| Rule 2 | PANEL == 'Online Panel' | cNATDISdroughthappen12mo == 'Yes' | (cFMRassistmgefarm != 'Yes' & cFMRmanagefarm != 'Yes') |                          |
| Rule 3 | PANEL == 'Online Panel' | cNATDISdroughthappen12mo != 'Yes' | nil                                                    |                          |
| Rule 4 | PANEL != 'Online Panel' | PANEL != 'Community Survey'       | cNATDISdroughthappen12mo == 'Yes'                      |                          |
| Rule 5 | PANEL != 'Online Panel' | PANEL != 'Community Survey'       | cNATDISdroughthappen12mo != 'Yes'                      |                          |
| Rule 6 | PANEL != 'Online Panel' | PANEL == 'Community Survey'       | nil                                                    |                          |

#+RESULTS: using

*** rules2subset func
#+name:using rules
#+begin_src R :session *R* :tangle R/rules2subset.R :exports none :eval yes
  #### name:using rules ####
  # http://www.togaware.com/datamining/survivor/Convert_Tree.html
  rules2subset <- function(
    rulesdf = rulesdf
    ,
    datname = "dat"
    ,
    response = "cNATDISdroughtCHANGEDofffrmwrk"
    ,
    show_r = F
    , 
    expected_values = NULL
  )
  {
    expected_values = 'expected_value'
    if (!is.null(expected_values)) {
      expectations <- rulesdf[,which(names(rulesdf) == expected_values)]
      rulesdf <- rulesdf[,-which(names(rulesdf) == expected_values)]
      names(rulesdf)
  
    }
    
    totals <- as.data.frame(matrix(NA, ncol = 3, nrow = 0))
    names(totals) <- c("Rule", "Subtotal", "RuleText")
   for (i in 1:nrow(rulesdf))
    {
  #    i=1
  #    if (frm[i,1] == "<leaf>")
  #    {
        # The following [,5] is hardwired - needs work!
  #      cat("\n")
        cat(sprintf("--------\n\n Rule number: %s \n\n", rulesdf[i, 1]))
  #      cat(sprintf("[yval=%s cover=%d (%.0f%%) prob=%0.2f]\n",
  #                  ylevels[frm[i,]$yval], frm[i,]$n,
  #                  round(100*frm[i,]$n/ds.size), frm[i,]$yval2[,5]))
        rules <- rulesdf[i,-1]
        rules <- rules[!is.na(rules)]
        pth <- rules
        cat(sprintf("   %s\n", unlist(pth)), sep="")
        cat(sprintf("Expected values: %s", expectations[i]))
        txt1 <- sprintf('attach(%s)', datname)
        txt <- paste(datname,"[",
                     paste(unlist(pth), sep="", collapse = paste("\n & ", sep = ""))
                     ,
                     ",]", sep = "")
        
        ## txt <- paste(datname,"[",datname,"$",
        ##              paste(unlist(pth), sep="", collapse = paste("\n & ",datname,"$", sep = ""))
        ##              ,
        ##              ",]", sep = "")
        txt2 <- sprintf('detach(%s)', datname)
        txt3 <- paste("with(", datname,", ", txt, ")", sep = '')
        cat("\n")      
        if(show_r){
          cat(txt3)
          cat("\n\n")
        }
        df <- eval(
          parse(text = txt3)
          )
        #str(df)
  
        dd <- disentangle::data_dict(df, response)
        print(dd)
        cat(sprintf("Subtotal: %s\n", sum(dd$Count)))
  subtotal <- data.frame(Rule = rulesdf[i,1], Subtotal = sum(dd$Count),
                         RuleText = paste(unlist(pth), sep="", collapse = paste(" & ", sep = ""))
                         )
  #subtotal
  
      totals <- rbind(totals, subtotal)
      }
  grandtotal <- data.frame(Rule = 'GrandTotal', Subtotal =   sum(totals$Subtotal),
                         RuleText = ''
                         )
    totals <- rbind(totals, grandtotal)
    print(totals)
    return(totals)
  }
#+end_src

*** COMMENT test using rules
#+name:test using rules
#+begin_src R :session *R* :tangle no :exports none :eval no
  #### name:test using rules ####
  fit2 <- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis)
  plot(fit2)
  text(fit2)
  list.rules.rpart(fit2)
  list.rules.rpart2(fit2)
#+end_src

** Confidence intervals around a proportion
*** COMMENT adjustedWald
#+name:adjustedWald
#+begin_src R :session *R* :tangle R/adjustedWald.R :exports none :eval no
  # adjusted wald from http://www.measuringux.com/adjustedwald.htm
  z <- 1.96
  padj <- (n*p + (z^2)/2)/(n + z^2)  
  nadj <- n + z^2  
  # And finally, the calculation of the confidence interval:
  d2$ci  <- z * sqrt(padj*(1 - padj)/nadj)  
  d2$uci  <- padj + z * sqrt(padj*(1 - padj)/nadj)  
  d2$lci  <- padj - z * sqrt(padj*(1 - padj)/nadj)

#+end_src
** crosstabulating a list of variables (weighted data) by various dimensions and returning unweighted n (and CI for nominal data)
*** COMMENT feed
#+name:feed
#+begin_src R :session *R* :tangle no :exports none :eval yes
#### name:feed ####
indat<-read.csv("inst/extdata/crosstab_weighted_survey.csv")
indat
#+end_src

#+RESULTS: feed
| 0.1 survey data    | 2015 RWS data set_Masterfile_25May2016        | master       | check the version, update if desired | ~/Private/Regional Wellbeing Survey/RWSurvey 2015/RWS Data/MASTER                                           |
| 0.2 farmer type    | Farmer type coding.csv                        | farmertype   |                                      | ~/ownCloud/Regional Wellbeing Study/RWSurvey 2015/RWS Data/RWS Data Analysis/Farmer type coding             |
| 0.3 weights        | TestOutweightsDataset_NoEdu_Cut.csv           | weights      |                                      | ~/ownCloud/Regional Wellbeing Study/RWSurvey 2015/RWS Data/RWS Data Analysis/Weighting process/data_derived |
| 0.4 load metdata   | 2015 RWS Metadata.xlsx                        | metadata     |                                      | ~/Private/Regional Wellbeing Survey/RWSurvey 2015/RWS Data/MASTER                                           |
| 0.5 regions        | ReportingRegions.shp                          | regions      |                                      | ~/ownCloud/Regional Wellbeing Study/RWSurvey 2015/RWS Data/RWS Data Analysis/ReportingRegions               |
| 0.6 input data     | master, farmertype, weights, metadata,regions | indat        |                                      |                                                                                                             |
| 1.1 setup section  |                                               | sectionlabel |                                      |                                                                                                             |
| 1.2 list the vars  | metadata                                      | mainvars     |                                      |                                                                                                             |
| 1.3 select the dim | dimensions                                    | dimension    |                                      |                                                                                                             |
| 1.4 set the scope  | sectionlabel,mainvars,dimension               | scope        |                                      |                                                                                                             |
| 1.5 analysis data  | scope, indat                                  | indat2       |                                      |                                                                                                             |

*** COMMENT show
#+name:show
#+begin_src R :session *R* :tangle no :exports none :eval yes
  #### name:show ####
  require(disentangle)
  require(stringr)
  indat<-read.csv("inst/extdata/crosstab_weighted_survey.csv", as.is = T, strip.white = T)
  indat[,1:3]
  str(indat)
  nodes <- newnode(indat, "step", "inputs", "outputs")
  #DiagrammeR::grViz(nodes)
  sink("file_name.dot")
  cat(nodes)
  sink()# If graphviz is installed and on linux
  system("dot -Tpdf file_name.dot -o file_name.pdf")
  #browseURL("file_name.pdf")
#+end_src
*** step 0 funcs and load
**** COMMENT Step 0 load libraries
#+begin_src R :session *R* :tangle inst/doc/explore_RWS_load.R :exports none :eval yes
  #### name:init ####
  library(sqldf)  
  library(survey)
  library(readxl)
  library(car)
  library(data.table)
#+end_src

#+RESULTS:
| car         |
| readxl      |
| survey      |
| grid        |
| sqldf       |
| RSQLite     |
| DBI         |
| gsubfn      |
| proto       |
| stringr     |
| disentangle |
| stats       |
| graphics    |
| grDevices   |
| utils       |
| datasets    |
| methods     |
| base        |

**** COMMENT Step 0 load master
#+begin_src R :session *R* :tangle inst/doc/explore_RWS_load.R :exports none :eval yes
  
  projdir <- "/home/ivan_hanigan/ownCloud/Regional Wellbeing Study/RWSurvey 2015/RWS Reports/Drought and extreme weather"
  
  indir_master <- "/home/ivan_hanigan/Private/Regional Wellbeing Survey/RWSurvey 2015/RWS Data/MASTER"
  #setwd(indir_master)
  #dir()
  
  infile_master <- "2015 RWS data set_Masterfile_25May2016.csv"
  
  master <- read.csv(file.path(indir_master, infile_master))
  nrow(master)
  # 13303
  ncol(master)
  # 1032
#+end_src
**** COMMENT Step 0 load metadata
#+begin_src R :session *R* :tangle inst/doc/explore_RWS_load.R :exports none :eval yes
  dir(indir_master)
  # first read told me that there are 9 cols and it failed to identify
  # the type as text so set this
  metadata  <- read_excel(file.path(indir_master, "2015 RWS Metadata_25May2016.xlsx"),
                          col_types = rep("text", 9))
  str(metadata)
  names(as.data.frame(metadata))
  metadata$sortorder <- row.names(metadata)
  
  
#+end_src
**** COMMENT Step 0 load farmer type notes
#+begin_src R :session *R* :tangle inst/doc/explore_RWS_load.R :exports none :eval no
  
  ## -    Notfarmer1DrylandFarmer2Irrigator3UnspecFmr4: This variable is my best estimate of whether 
  ## a respondent was (1) Not a farmer, (2) Dryland farmer, (3) Irrigator or (4) Farmer unspecified. It 
  ## has been produced based not only on the I am a dryland farmer and I irrigate all or part of my 
  ## land variable, but also includes inferred values for around 400 of the farmers who did not 
  ## answer those questions, based on (i) what they produce on the farm, (ii) whether they answered 
  ## later irrigation questions in a way suggesting they are an irrigator, and (iii) their geographic 
  ## location (there is no irrigation in some districts, which allowed me to infer the person was a 
  ## dryland farmer)
  ## -    FarmerTypeSimple: This variable is based on what a farmer described as their most important 
  ## farm business activity AND their major farming activities. Data have been coded to the most 
  ## common combinations. I am currently writing a full metadata entry for this variable as the logic 
  ## used to classify farmers who did multiple activities is complex. 
#+end_src
**** COMMENT Step 0 load farmer type
#+begin_src R :session *R* :tangle inst/doc/explore_RWS_load.R :exports none :eval yes
  indir_farmers  <- "~/ownCloud/Regional Wellbeing Study/RWSurvey 2015/RWS Data/RWS Data Analysis/Farmer type coding"
  infile_farmers <- "Farmer type coding.csv"
  dat_farmers <- read.csv(file.path(indir_farmers, infile_farmers))
  nrow(dat_farmers)
  #13304
  ncol(dat_farmers)
  #75
  names(dat_farmers)
  farmers <- dat_farmers[,c("cSURVID", "Notfarmer1DrylandFarmer2Irrigator3UnspecFmr4",
                                "FarmerTypeSimple")]
  head(farmers)
#+end_src
**** COMMENT Step 0 load weights
#+begin_src R :session *R* :tangle inst/doc/explore_RWS_load.R :exports none :eval yes
  
  indir_wts <- "~/ownCloud/Regional Wellbeing Study/RWSurvey 2015/RWS Data/RWS Data Analysis/Weighting process/data_derived"
  
  dir(indir_wts)
  infile_wts  <- "TestOutweightsDataset_NoEdu_Cut.csv"
  
  weights <- read.csv(file.path(indir_wts, infile_wts))
  str(weights)
  weight <- "GReg_Weight_NoEdu_Cut"
  wtvar <- c("cSURVID", weight)
  weights <- weights[,wtvar]
  head(weights)
  dim(weights)
  # [1] 13304     2
  
#+end_src
**** COMMENT Step 0 load merge
#+begin_src R :session *R* :tangle inst/doc/explore_RWS_load.R :exports none :eval yes
  dat  <- merge(master, farmers)
  dat  <- merge(dat, weights)
  #str(dat[1:4])
  
  
#+end_src

**** COMMENT Step 1 define scope
#+begin_src R :session *R* :tangle no :exports none :eval yes
  flist <- dir("/home/ivan_hanigan/ownCloud/Regional Wellbeing Study/RWSurvey 2015/RWS Reports/Drought and extreme weather/figures_and_tables")
  flist <- strsplit(flist, "\\.")
  flist2 <- do.call(rbind, flist)
  head(flist2)
  names(table(flist2[,1]))
#+end_src

#+RESULTS:
| drought_ewe                                                            |
| drought_ewe_AFFECTED                                                   |
| drought_ewe_AFFECTEDpers                                               |
| drought_ewe_AFFECTED_the_following                                     |
| drought_ewe_AFFECTED_the_following_gender                              |
| drought_ewe_AFFECTED_the_following_ReportingRegions                    |
| drought_ewe_AFFECTED_wide                                              |
| drought_ewe_age                                                        |
| drought_ewe_by_ReportingRegion                                         |
| drought_ewe_by_ReportingRegion_cNATDISbushfirehappen                   |
| drought_ewe_by_ReportingRegion_cNATDIScoldsnaphappen                   |
| drought_ewe_by_ReportingRegion_cNATDISdroughthappen12mo                |
| drought_ewe_by_ReportingRegion_cNATDISfloodhappen                      |
| drought_ewe_by_ReportingRegion_cNATDISheatwavehappen                   |
| drought_ewe_by_ReportingRegion_cNATDISseverestormcyclonehappen         |
| drought_ewe_by_ReportingRegion_farmers                                 |
| drought_ewe_by_ReportingRegion_farmers_cNATDISbushfirehappen           |
| drought_ewe_by_ReportingRegion_farmers_cNATDIScoldsnaphappen           |
| drought_ewe_by_ReportingRegion_farmers_cNATDISdroughthappen12mo        |
| drought_ewe_by_ReportingRegion_farmers_cNATDISfloodhappen              |
| drought_ewe_by_ReportingRegion_farmers_cNATDISheatwavehappen           |
| drought_ewe_by_ReportingRegion_farmers_cNATDISseverestormcyclonehappen |
| drought_ewe_cFDlossprofit                                              |
| drought_ewe_CHANGED_the_following                                      |
| drought_ewe_CHANGED_the_following_Australia                            |
| drought_ewe_CHANGED_the_following_gender                               |
| drought_ewe_CHANGED_the_following_ReportingRegions                     |
| drought_ewe_farmers                                                    |
| drought_ewe_farmers_ste                                                |
| drought_ewe_farmer_type                                                |
| drought_ewe_farmer_type_and_profitability                              |
| drought_ewe_FarmerTypeSimple                                           |
| drought_ewe_gender                                                     |
| drought_ewe_gender_age                                                 |
| drought_ewe_gender_age_notfarmer_farmer                                |
| drought_ewe_gender_farmer_type_and_profitability                       |
| drought_ewe_Notfarmer1DrylandFarmer2Irrigator3                         |
| drought_ewe_ste                                                        |
| DroughtMaps                                                            |
| DroughtMapsBOM                                                         |
| drought_personal_life                                                  |
| farm_business_planning                                                 |
| map_BOM_vs_cNATDISdrought                                              |
| map_cNATDISdroughthappen12mo                                           |
| map_cNATDISdroughthappen12mo_farmers                                   |
| map_DroughtMapsBOM                                                     |
| qc_cNATDISdroughtCHANGEDdesirefarm_wt_uwt                              |
| template                                                               |
| template_drought_ewe_groups                                            |
| versions                                                               |
**** COMMENT Step 1.0 load report_sections
#+begin_src R :session *R* :tangle inst/doc/explore_RWS_define_scope.R :exports none :eval yes
  report_sections <- c("drought_ewe",                                                            
  "drought_ewe_AFFECTED",                                                  
  "drought_ewe_AFFECTED_the_following",                                     
  "drought_ewe_CHANGED_the_following",                                      
  "drought_ewe_farmer_type_and_profitability",                              
  "map_cNATDISdroughthappen12mo")                                           
  
  
   
#+end_src

**** COMMENT Step 2 init
#+begin_src R :session *R* :tangle inst/doc/expore_RWS_main.R :exports none :eval yes
  #### Load
  source("inst/doc/explore_RWS_load.R")
  source("inst/doc/explore_RWS_define_scope.R")
#+end_src
*** TODO Function xtab_by_dimensions
#+begin_src R :session *shell* :tangle R/xtab_by_dimensions.R :exports none :eval yes
  xtab_by_dimensions <- function(
    dat = dat
    ,
    pid = "cSURVID"
    ,
    mainvar = "cNATDISdroughthappen12moV2" 
    ,
    dimension = "overall"
    ,
    weights = "GReg_Weight_NoEdu_Cut" # or NULL
    ,
    ci_prop = NULL # the name of the col with the proportion to give CI for
    ,
    overall = TRUE
    ,
    extra_exclusions_mainvar = NULL # i.e. -88 N/A along with standard -999
    ,
    extra_exclusions_dimension = NULL # i.e. '' as well as standard -777
                                      # and -999
    ){
  invar <- c(pid, dimension, mainvar, weights)
  matrix(invar)
  
  # data.frame(table(dat[,dimension]))
  if(!is.null(extra_exclusions_dimension)){
    xtra <- paste("& dat[,dimension] != ", extra_exclusions_dimension, sep = "")
  } else {
    xtra <- ""
  }
  txt <- paste("datin <- dat[             
               dat[,dimension] != '-999' &
               dat[,dimension] != '-777'              
               ",xtra,"
               , invar
               ]", sep ="")
  #cat(txt)
  eval(parse(text=txt))  
  #str(datin)
  datin[,dimension] <- factor(datin[,dimension])
  #data.frame(table(datin[,dimension]))
    
  
  #mainvar
  #data.frame(table(datin[,mainvar]))  
  #head(datin)
  #str(datin)
  #summary(datin)
  if(!is.null(extra_exclusions_mainvar)){
    xtra <- paste("& datin[,mainvar] != ", extra_exclusions_mainvar, sep = "")
  } else {
    xtra <- ""
  }
  txt <- paste("datin <- datin[             
               datin[,mainvar] != '-999' &
               datin[,mainvar] != '-777'              
               ",xtra,"
               , 
               ]", sep ="")
  #cat(txt)
  eval(parse(text=txt))  
  #str(datin)
  
  datin[,mainvar] <- factor(datin[,mainvar])
  #data.frame(table(datin[,mainvar]))
  
  #outcols <-
  #summa_out <- matrix(NA, nrow = 0, ncol = outcols)
  #head(datin)
  #nrow(datin)
  # 6558
  #head(datin[,1:4])
  if(is.null(weights)){
  # n
  n <- table(datin[,dimension])
  #n
  
  txt <- paste("summa <- cbind('",mainvar,"', '",dimension,"', n, t(prop.table(table(datin[,c('",mainvar,"','",dimension,"')]),2)))", sep = '')
  #txt
  } else {  
  
  # unweighted n
  n <- table(datin[,dimension])
  #n
  #dat_wt <- svydesign(ids = ~Notfarmer1DrylandFarmer2Irrigator3, data
  #= datin, weights = datin$GReg_Weight_NoEdu_Cut)
  txt1 <- paste("dat_wt <- svydesign(id = ~1, data = datin, weights = datin$",weights,")", sep = "")
  #txt1
  eval(parse(text=txt1))    
  #summary(dat_wt)
  #str(dat_wt)
  
  txt <- paste("summa <- cbind('",mainvar,"', '",dimension,"', n, t(prop.table(svytable(~",mainvar,"+",dimension,", design = dat_wt),2)))", sep = '')
  }
  
  #txt
  #qc <- t(prop.table(svytable(~cNATDISdroughthappen12mo+Notfarmer1DrylandFarmer2Irrigator3, design = dat_wt),2))
  #qc
  #cbind(qc*100,qc[,1]+qc[,2])
  eval(parse(text=txt))
  #summa
  ## summa <- c(mainvar, table(datin[,mainvar])/n, n)
  #as.data.frame(summa)
  #summa
  summa  <- cbind(summa, row.names(summa))
  ##   str(summa)
  #summa_out <- summa
  
  ## }
  #summa
  #head(summa)
  # TODO modify for number of cols
  nc <- ncol(summa)
  #nc
  if(nrow(summa) == 1){
    d2  <- sapply(summa[,3:(nc-1)], as.numeric)
    
    d2  <- data.frame(
      matrix(summa[,c(1:2, nc)], nrow = 1),
                      matrix(round(d2, 3), nrow = 1)
                      )
    names(d2)[4:(nc)]  <- names(summa[,3:(nc-1)])  
  #d2
  } else {
    d2  <- apply(summa[,3:(nc-1)], 2, as.numeric)
    d2  <- data.frame(summa[,c(1:2, nc)], round(d2, 3))
  }
  #head(d2)
  
  #names(d2)  <- c("variable", "dimension", "No", "Yes", "n")
  #d2
  
  #d2  <-  cbind(summa[,nc], d2)
  names(d2)  <- c("variable", "dimension", "state", names(d2)[4:(nc)])
  row.names(d2) <- NULL
  ## d3  <- data.frame(variable = d2$variable, Disagree = rowSums(d2[,c(2:4)]),
  ##                   Neither_agree_or_disagree = d2[,5],
  ##                   Agree = rowSums(d2[,6:8])
  ##                   )
  ## d3
  ## d2 <- merge(d2, d3)  
  #d2 <- merge(mainvars_df, d2, by.x = "var", by.y = "variable")
  
  ## d2  <- sqldf("select *
  ## from d2
  ## where Yes > 0
  ## order by var, state")
  ## d2  
  ## #names(d2) <- gsub("Neither_agree_or_disagree", "Neither agree/disagree", names(d2))
  ## str(d2)
  ## paste(names(d2), sep = "", collapse = "', '")
  ## d2 <- d2[,c('var', 'state', 'dimension', 'sortorder', 'Item stem - exact wording seen by respondents', 'Item - exact wording seen by respondent OR description of variable', 'No', 'Yes', 'n', 'Piping or display logic')]
  ## d2[,2] <- paste(d2[,2], " (n=", d2$n, ")", sep = "")
  if(!is.null(ci_prop)){
  # adjusted wald from http://www.measuringux.com/adjustedwald.htm
  z <- 2
  # rather than 1.96
  padj <- (d2$n * d2[,ci_prop] + (z^2)/2)/(d2$n + z^2)
  
  nadj <- d2$n + z^2
  
  # And finally, the calculation of the confidence interval:
  
  d2$z_se  <- z * sqrt(padj*(1 - padj)/nadj)  
  d2$lci  <- d2[,ci_prop] - (z * sqrt(padj*(1 - padj)/nadj))
  d2$uci  <- d2[,ci_prop] + (z * sqrt(padj*(1 - padj)/nadj))
  # NB we will use this +/- on the proportion (not the padj as recommended, because the asymmetry 
  # might look odd to our audience)
  }
  return(d2)
  }
#+end_src

*** TODO Function xtab_variables_by_dimensions
#+begin_src R :session *R* :tangle R/xtab_variables_by_dimensions.R :exports none :eval yes
     
  xtab_variables_by_dimensions <- function(dat = NULL,
                                           pid = NULL,
                                           variables = NULL,
                                           dimensions = NULL,
                                           weights = NULL, 
                                           ci_prop = NULL){
  d2out_list <- list(0)
  for(i in 1:length(variables)){
  #  i  = 1
  
    mainvar  <- variables[i]
    mainvar
    d2out2_list <- list(0) 
    for(j in 1:length(dimensions)){
      dimension <- dimensions[j]
      
      d2out2_list[[j]] <- xtab_by_dimensions(dat = dat,
        pid = pid,
        mainvar = mainvar,
        dimension = dimension,
        weights = weights, 
        ci_prop = ci_prop
        )
    }
    d2out_list[[i]] <- rbindlist(d2out2_list)
    
  }
  
  #d2out_list
  outout <- rbindlist(d2out_list)
  
  return(outout)
  }
#+end_src
*** Step 1.1 set up mainvars
#+begin_src R :session *R* :tangle inst/doc/explore_RWS_define_scope.R :exports none :eval yes
  
  
  mainvars <- c("cNATDISdrought12moAFFECTpers",
  "cNATDISdrought12moAFFECTjobbus",
  "cNATDISdroughtAFFECThshld",
  "cNATDISdroughtAFFECTcommunity")
  

#+end_src

#+RESULTS:
| cNATDISdrought12moAFFECTpers   |
| cNATDISdrought12moAFFECTjobbus |
| cNATDISdroughtAFFECThshld      |
| cNATDISdroughtAFFECTcommunity  |
*** Step 3 source func, load data, clean dimensions and mainvars
#+begin_src R :session *R* :tangle inst/doc/expore_RWS_main.R :exports none :eval yes
  ########################################################################################
  # func
  #rm(list = ls())
  source("R/xtab_by_dimensions.R")
  source("R/xtab_variables_by_dimensions.R")
  dir("inst/doc")
  source("inst/doc/explore_RWS_define_scope.R")
  ls()
  mainvars
  #dimension
  
  report_sections
  sectionlabel <- "drought_ewe_AFFECTED_the_following"
  
  ########################################################################################3
  # load
  if(!exists("dat")){
    source("inst/doc/explore_RWS_load.R")
  }
#+end_src

#+RESULTS:
=drought_ewe_AFFECTED_the_following

*** Step 1.2 create new mainvars by recoding
#+name:Step 0 create new variables
#+begin_src R :session *R* :tangle no :exports none :eval yes
  ########################################################################################
  # clean
  ## check the piping logic does not show people who should be excluded
  
  ## collapse into smaller groups
  table(dat$cNATDISdroughtAFFECTcommunity)
  
  ## dat$cNATDISdroughtAFFECTcommunity2 <- recode(
  ##   dat$cNATDISdroughtAFFECTcommunity,
  ##   recodes = "0='0.No impact';
  ##     1:3 = '1.Negative impact';
  ##     4 = '2.Neither negative or positive';
  ##     5:7 = '3.Positive impact';
  ##     -99 = '4.Dont know'"
  ##   )
  ## as.data.frame(table(dat$cNATDISdroughtAFFECTcommunity2))
  
  for(mainvar in mainvars){
  mainvar2  <- paste(mainvar, "2", sep = "")
  txt0 <- paste("dat$",mainvar2," <- recode(dat$",mainvar,", recodes = \"0='0.No impact'; 1:3 = '1.Negative impact'; 4 = '2.Neither negative or positive'; 5:7 = '3.Positive impact'; -99 = '4.Dont know'\")",
    sep = "")
    
  txt0
  eval(parse(text=txt0))  
  }
  names(dat)
  
  # TODO add to metadata
  #as.data.frame(t(metadata[1,]))
  
  #metadata <- rbind(metadata,
  #                  c("newvar", "created from oldvar, added label for things")
  #                  )
  
#+end_src

#+RESULTS: Step
| cSURVID                                       |
| cSURVMODE                                     |
| cSURVResponseID                               |
| cSURVStartDate                                |
| cSURVEndDate                                  |
| cSURVfinished                                 |
| cSURVpanel                                    |
| cSURVlength                                   |
| cCWBpositive                                  |
| cCWBnegative                                  |
| cCM2grtplc                                    |
| cCM2brtfuture                                 |
| cCM2proudlive                                 |
| cCM2commspirit                                |
| cCM2envsurr                                   |
| cCM2safeplc                                   |
| cCM2envgood                                   |
| cCM2attractivebdlg                            |
| cCM2attractivenatplaces                       |
| cCM2highcrimerate                             |
| cCM2commalcohol                               |
| cCM2commdrugs                                 |
| cCM2alcoholdrugs                              |
| cCMSERVhealth                                 |
| cCMSERVmentalhealth                           |
| cCMSERVspecialhealth                          |
| cCMSERVmobphone                               |
| cCMSERVhighspeedinternet                      |
| cCMSERVeducat                                 |
| cCMSERVchildcare                              |
| cCMSERVroads                                  |
| cCMSERVpublictrans                            |
| cCMSERVprofserv                               |
| cCMSERVretail                                 |
| cCMSERVfrshfruitveg                           |
| cCMSERVaffordfood                             |
| cCMSERVagedcare                               |
| cCMSERVbanking                                |
| cCMSERVATM                                    |
| cCMSERVACCESSgenhealth                        |
| cCMSERVACCESSmentalhealth                     |
| cCMSERVACCESSspecialhealth                    |
| cCMSERVACCESSeducat                           |
| cCMSERVACCESSfinadvice                        |
| cCMSERVACCESSgrocery                          |
| cCMSERVACCESSbanking                          |
| cCMSERVACCESSATM                              |
| cCMSERVACCESSlegal                            |
| cCMSERVACCESSaccounting                       |
| cCMSERVACCESSchemist                          |
| cCTYCHGliveability                            |
| cCTYCHGfriendliness                           |
| cCTYCHGlocaleconomy                           |
| cCTYCHGlandscapesurrounds                     |
| cCM5livcosts                                  |
| cCM2locbusdoingwell                           |
| cCM5plentyjobs                                |
| cCM5finwell.off                               |
| cCM4Sgethelp                                  |
| cCM4takelead                                  |
| cCM5locgroupsgood                             |
| cCM4copewell                                  |
| cCMfairgo                                     |
| cCM5locgovhelp                                |
| cCM5kdecisrep                                 |
| cCM5involveDM                                 |
| cCMRecomgoodplace                             |
| cCM6welcome                                   |
| cCM6partcomm                                  |
| cCM6inittogether                              |
| cCM6outsider                                  |
| cSOCgroupsisolated                            |
| cSOCgroupsnbhdnotwelcome                      |
| cSOCctydisagreement                           |
| cCM8timefam                                   |
| cCM8timefriends                               |
| cCM8chatneigh                                 |
| cCM8sportsgrpteam                             |
| cCM8communitycluborgs                         |
| cCM8usecommunityplaces                        |
| cCM8attendctyevents                           |
| cCM8artscultureevents                         |
| cCM8politactiv                                |
| cCM8volunteerlocalcom                         |
| cVOLemergservicesYN                           |
| cVOLcommunityeventsYN                         |
| cVOLsportrecclubYN                            |
| cVOLschoolrelatedYN                           |
| cVOLserviceclubYN                             |
| cVOLfarmagorgnYN                              |
| cVOLenvtconservationlcareYN                   |
| cVOLhealthwelfareYN                           |
| cVOLchurchYN                                  |
| cVOLanimalservicesYN                          |
| cVOLmusicartscultureYN                        |
| cVOLotherYN                                   |
| cVOLotherdescribe                             |
| cVOLotherdescribe_Recoded.into.existing.codes |
| cGEOGSTEorig                                  |
| cGEOGSTE                                      |
| cGEOGlocalityprimaryUNCLEANED                 |
| cGEOGlocality                                 |
| GEOGpcodeprimaryUNCLEANED                     |
| GEOGpcode                                     |
| cGEOGRDA                                      |
| cREPORTINGREGIONS                             |
| cGEOGLGA                                      |
| cGEOGSA2code                                  |
| cGEOGSA2name                                  |
| cGEOGUCLcode                                  |
| cGEOGUCLname                                  |
| cGEOGuclconfidence                            |
| cGEOGMDB                                      |
| cGEOGMDBconfidence                            |
| cGEOGBasinPlanRegion                          |
| cGEOGSWSDL                                    |
| cGEOGNRMregion                                |
| cGEOGLLSregion                                |
| cGEOGlocalitysecdryUNCLEANED                  |
| GEOGpcodesecdryUNCLEANED                      |
| cGEOGruraltown                                |
| cMIGyrslived                                  |
| cMIGhowlikelyshift5ptscale                    |
| cMIGconsidernoshift                           |
| cLSlifewhole                                  |
| cLSstandardliving                             |
| cLShealth                                     |
| cLSachieving                                  |
| cLSrelationships                              |
| cLSsafeyoufeel                                |
| cLScommunity                                  |
| cLSfuturesecurity                             |
| cLSlifeworthwhile                             |
| cHCachgoals                                   |
| cHCaccompdifftasks                            |
| cHCachievimportant                            |
| cHCsuccmostthings                             |
| cHCovercomechallenges                         |
| cHCconfperfomwell                             |
| cHCcompothdowell                              |
| cHCdiffworkwell                               |
| cHClearnskills                                |
| cHCskillsindemand                             |
| cHEALTHgen                                    |
| cHEALTHbdypn                                  |
| cHEALTHsmoke                                  |
| cHEALTHdrink                                  |
| ck10_1                                        |
| ck10_2                                        |
| ck10_3                                        |
| ck10_4                                        |
| ck10_5                                        |
| ck10_6                                        |
| ck10_7                                        |
| ck10_8                                        |
| ck10_9                                        |
| ck10_10                                       |
| SDgender                                      |
| cSDage                                        |
| cSDethnicity                                  |
| cATSIno                                       |
| cATSIaboriginal                               |
| cATSItorresstraitislander                     |
| cSDhhldstruct                                 |
| cSDdependants                                 |
| cSDlgbtiqastraight                            |
| cSDlgbtiqalesbiangay                          |
| cSDlgbtiqabisexual                            |
| cSDlgbtiqaother                               |
| cSDlgbtiqaprefernotsay                        |
| cSDhousing                                    |
| cHOUSEAFFORDlackquality                       |
| cHOUSEAFFORDlackavail                         |
| cHOUSEAFFORDlrgdeposit                        |
| cHOUSEAFFORDgetloan                           |
| cHOUSEAFFORDnone                              |
| cHOUSEAFFORDNA                                |
| cSDeducation                                  |
| cSDEMPretired                                 |
| cSDEMPptunpaidcare                            |
| cSDEMPftunpaidcare                            |
| cSDEMPselfemp                                 |
| cSDEMPftwork                                  |
| cSDEMPptwork                                  |
| cSDEMPcasualwork                              |
| cSDEMPunempl                                  |
| cSDEMPstudypt                                 |
| cSDEMPstudyft                                 |
| cSDEMPcreative                                |
| cSDEMPother                                   |
| cSDEMPothdescribe                             |
| cSDtravelwork                                 |
| cSDworkhome                                   |
| cFMRmanagefarm                                |
| cFMRassistmgefarm                             |
| cFMRworkernotmgr                              |
| cFMRagcontractor                              |
| cFMRagprofessional                            |
| cFMRusedtobe                                  |
| cFMRnoag                                      |
| cSDworkocc_1                                  |
| cSDworkocc_2                                  |
| cSDincome                                     |
| cSDfinfam                                     |
| cSDgovpenno                                   |
| cSDgovpenyesage                               |
| cSDgovpenyesdisab                             |
| cSDgovpenyesoth                               |
| cSDFINholiday                                 |
| cSDFINgoingout                                |
| cSDFINnonfood                                 |
| cSDFINpaybills                                |
| cSDFINmortgage                                |
| aSDFINpawned                                  |
| cSDFINnomeals                                 |
| cSDFINheatcoolhome                            |
| cSDFINhelpfam                                 |
| cSDFINhelporg                                 |
| cSDFINnone                                    |
| cNATDISdroughthappen12mo                      |
| cNATDIScoldsnaphappen                         |
| cNATDISheatwavehappen                         |
| cNATDISbushfirehappen                         |
| cNATDISseverestormcyclonehappen               |
| cNATDISfloodhappen                            |
| cNATDISdrought12moAFFECT                      |
| cNATDIScoldsnapAFFECT                         |
| cNATDISheatwaveAFFECT                         |
| cNATDISbushfireAFFECT                         |
| cNATDISseverestormAFFECT                      |
| cNATDISfloodAFFECT                            |
| cNATDISdroughtYEAR20062010                    |
| cNATDISdroughtYEAR2011                        |
| cNATDISdroughtYEAR2012                        |
| cNATDISdroughtYEAR2013                        |
| cNATDISdroughtYEAR2014                        |
| cNATDISdroughtYEAR2015                        |
| cNATDISdrought12moAFFECTpers                  |
| cNATDISdrought12moAFFECTjobbus                |
| cNATDISdroughtAFFECThshld                     |
| cNATDISdroughtAFFECTcommunity                 |
| cNATDISdroughtCHANGEDinc                      |
| cNATDISdroughtCHANGEDstress                   |
| cNATDISdroughtCHANGEDamountspent              |
| cNATDISdroughtCHANGEDhshldexp                 |
| cNATDISdroughtCHANGEDsatpersrel               |
| cNATDISdroughtCHANGEDsocfrnds                 |
| cNATDISdroughtCHANGEDwrkload                  |
| cNATDISdroughtCHANGEDtimefam                  |
| cNATDISdroughtCHANGEDcmntyorg                 |
| cNATDISdroughtCHANGEDsoccmnty                 |
| cNATDISdroughtCHANGEDcmntyspprt               |
| cNATDISdroughtCHANGEDbsnscmnty                |
| cNATDISdroughtCHANGEDofffrmwrk                |
| cNATDISdroughtCHANGEDinvstfrm                 |
| cNATDISdroughtCHANGEDdesirefarm               |
| cNATDISdroughtCHANGEDlocalpopn                |
| cNATDISdroughtCHANGEDfamlyholdy               |
| cNATDISdroughtaccessinfobom                   |
| cNATDISdroughtaccessinfoclimfore              |
| cNATDISdroughtaccessinfoprepdry               |
| cNATDISdroughtaccessinfoprepgov               |
| cNATDISdroughtaccessinfogovweb                |
| cNATDISdroughtaccessinfoagpro                 |
| cNATDISdroughtaccessinfoaggrp                 |
| cNATDISdroughtaccessinfolandcare              |
| cNATDISdroughtaccessinfotraining              |
| cNATDISdroughtaccessinfoother                 |
| cNATDISdroughtaccessinfoothertxt              |
| cNATDISdroughtaccessinfobom2                  |
| cNATDISdroughtaccessinfoclimfor2              |
| cNATDISdroughtaccessinfoprepdry2              |
| cNATDISdroughtaccessinfoprepgov2              |
| cNATDISdroughtaccessinfogovweb2               |
| cNATDISdroughtaccessinfoagpro2                |
| cNATDISdroughtaccessinfoaggrp2                |
| cNATDISdroughtaccessinfolandcre2              |
| cNATDISdroughtaccessinfotrain2                |
| cNATDISdroughtaccessinfoother2                |
| cNATDISdroughtmngwater                        |
| cNATDISdroughtmngwateff                       |
| cNATDISdroughtmngfeedrsrv                     |
| cNATDISdroughtmngungraz                       |
| cNATDISdroughtmngriskass                      |
| cNATDISdroughtmngplan                         |
| cNATDISdroughtmngfinrsrv                      |
| cANviews                                      |
| cANINTnonotice                                |
| cANINTavoid                                   |
| cANINTdontint                                 |
| cANINTwatch                                   |
| cANINTothers                                  |
| cANINTtakecare                                |
| cANINTbackyard                                |
| cANINTworking                                 |
| cANINTsport                                   |
| cANINTbreed                                   |
| cANINTlivestock                               |
| cANINTrescue                                  |
| cANINTworkother                               |
| cANPETdog                                     |
| cANPETcat                                     |
| cANPETfish                                    |
| cANPETbird                                    |
| cANPETrabbit                                  |
| cANPETguineapig                               |
| cANPETmice                                    |
| cANPEThorse                                   |
| cANPETreptile                                 |
| cANPETinsect                                  |
| cANPETchicken                                 |
| cANPETgoat                                    |
| cANPETsheep                                   |
| cANPETcattle                                  |
| cANPETother                                   |
| cANPETnumber                                  |
| cANPETattached                                |
| cANBACKdog                                    |
| cANBACKchicken                                |
| cANBACKduck                                   |
| cANBACKgeese                                  |
| cANBACKgoat                                   |
| cANBACKsheep                                  |
| cANBACKcow                                    |
| cANBACKother                                  |
| cANBACKothdesc                                |
| cANBACKnumber                                 |
| cANBACKattached                               |
| cANSPORTdog                                   |
| cANSPORTcat                                   |
| cANSPORTfish                                  |
| cANSPORTbird                                  |
| cANSPORTrabbit                                |
| cANSPORTguineapig                             |
| cANSPORTmice                                  |
| cANSPORThorse                                 |
| cANSPORTreptile                               |
| cANSPORTinsect                                |
| cANSPORTchicken                               |
| cANSPORTgoat                                  |
| cANSPORTsheep                                 |
| cANSPORTcattle                                |
| cANSPORTother                                 |
| cANSPORTothdesc                               |
| cANSPORTnumber                                |
| cANSPORTattached                              |
| cANWORKdog                                    |
| cANWORKhorse                                  |
| cANWORKother                                  |
| cANWORKothdesc                                |
| cANWORKnumber                                 |
| cANWORKattached                               |
| cANOFTENfeedwater                             |
| cANOFTENhealth                                |
| cANOFTENgroom                                 |
| cANOFTENexercise                              |
| cANOFTENtime                                  |
| cANOFTENtreats                                |
| cANOFTENtraining                              |
| cANOFTENactivities                            |
| cANOFTENsocial                                |
| cANOFTENoutdoors                              |
| cANOFTENindoors                               |
| cANOFTENother                                 |
| cENVPROBregion                                |
| cENVPROBlowpriority                           |
| cH2Ocopechange                                |
| cCCfossil                                     |
| cCCworry                                      |
| cCCsciencedoubt                               |
| cENVCHnativeveg                               |
| cENVCHnativefish                              |
| cENVCHferal                                   |
| cENVCHweeds                                   |
| cENVCHnativeanmials                           |
| cENVCHbird                                    |
| cENVh2o                                       |
| cENVh2osalinity                               |
| cENVsoilerosion                               |
| cENVsoilsalinity                              |
| cENVsoilhealth                                |
| cENVferalanimals                              |
| cENVpestfish                                  |
| cENVinvasiveweeds                             |
| cENVlossvegetation                            |
| ENVpoorveghealth                              |
| cENVpoorhealthrivers                          |
| ENVlessnativeanimalbird                       |
| cENVdeclinenativefish                         |
| cACCsubdivision                               |
| cACCsolarfarms                                |
| cACCtreesenvt                                 |
| cACCwindfarms                                 |
| cACCcsg                                       |
| cACCregvegclearance                           |
| cACCgmocrops                                  |
| cACCEnvWatering                               |
| cACCintensivelivestock                        |
| cWETMANmoreimpissues                          |
| cWETMANdomore                                 |
| cWETMANpoorcond                               |
| cWETMANexaggerated                            |
| cWETMANriverreg                               |
| cH2OpriorityAG                                |
| cH2OpriorityENV                               |
| cH2OpriorityHSHLD                             |
| cH2OpriorityREC                               |
| cH2OpriorityIND                               |
| cEWATERregionlast5yr                          |
| cEWATERregioninfuture                         |
| cEWATERflowthroughregion                      |
| cEWATERimportantplaces                        |
| cEWATERhaveviews                              |
| cEWATERcanfindout2015                         |
| cEWATERcancommunicate2015                     |
| cEWATERgoodforenvt2015                        |
| cEWATERcausesomeproblems2015                  |
| cEWATERSUPPORTgeneral                         |
| cEWATERSUPPORTwherelive                       |
| cEWATERSUPPORTbirdbreed                       |
| cEWATERSUPPORTculture                         |
| cEWATERSUPPORTveggrowth                       |
| cEWATERSUPPORTfish                            |
| cEWATERRESULTerosion                          |
| cEWATERRESULTweeds                            |
| cEWATERRESULTpestfish                         |
| cEWATERRESULTblackwater                       |
| cEWATERRESULTencroachtrees                    |
| cEWATERRESULTmoresalinity                     |
| cEWATERRESULTnegimpfarminfras                 |
| cEWATERRESULTencroachtreesonfarm              |
| cEWATERRESULTimpedeaccessonfarm               |
| cEWATERRESULTinundatefarm                     |
| cEWATERRESULTdistruptfarmops                  |
| cEWATERRESULTnoprobs                          |
| cEWATERRESULTmorenativefish                   |
| cEWATERRESULTimproveveghealth                 |
| cEWATERRESULTmorebirds                        |
| cEWATERRESULTbetterfishing                    |
| cEWATERRESULTbetterswimming                   |
| cEWATERRESULTimprovepasture                   |
| cEWATERRESULTlesssalinity                     |
| cEWATERRESULThealthywaterways                 |
| cEWATERRESULTpasturecroponfarm                |
| cEWATERRESULTothbenefitonfarm                 |
| cEWATERorgCEWH                                |
| cEWATERorgMDBA                                |
| cEWATERorgnrm                                 |
| cEWATERorgoeh                                 |
| cEWATERorgdpi                                 |
| cEWATERorgwaternsw                            |
| cEWATERorgmacefrg                             |
| cEWATERorggwydirecaoac                        |
| cEWATERorglrwg                                |
| cEWATERorgmurrayewag                          |
| cEWATERorgmurrumbewarg                        |
| cEWATERorgOTHER                               |
| cEWATERtalkedtoCEWH                           |
| cEWATERtalkedtoMDBA                           |
| cEWATERtalkedtonrm                            |
| cEWATERtalkedtooeh                            |
| cEWATERtalkedtodpi                            |
| cEWATERtalkedtowaternsw                       |
| cEWATERtalkedtomacefrg                        |
| cEWATERtalkedtogwydirecaoac                   |
| cEWATERtalkedtolachlanlrwg                    |
| cEWATERtalkedtomurrayewag                     |
| cEWATERtalkedtomurrumbewarg                   |
| cEWATERtalkedtoOTHER                          |
| cEWATERINFOemail                              |
| cEWATERINFOwebsite                            |
| cEWATERINFOfacebook                           |
| cEWATERINFOtwitter                            |
| cEWATERINFOflyer                              |
| cEWATERINFOnewspaper                          |
| cEWATERINFOnrmgroup                           |
| cEWATERINFOfishinggroup                       |
| cEWATERINFOfarmorg                            |
| cEWATERINFOshops                              |
| cEWATERINFOoth                                |
| cEWATERINFOothdesc                            |
| ENVWTRINVnone                                 |
| ENVWTRINVinfoonly                             |
| ENVWTRINVsurvey                               |
| ENVWTRINVmtgs                                 |
| ENVWTRINVinfoandhavesay                       |
| NSWWATERwaterway1                             |
| NSWWATERwaterway2                             |
| NSWWATERwaterway3                             |
| NSWWATERwaterway4                             |
| NSWWATERwaterway5                             |
| NSWwaterway1spircultural                      |
| NSWwaterway2spircultural                      |
| NSWwaterway3spircultural                      |
| NSWwaterway4spircultural                      |
| NSWwaterway5spircultural                      |
| NSWwaterway1exerciseoutwater                  |
| NSWwaterway2exerciseoutwater                  |
| NSWwaterway3exerciseoutwater                  |
| NSWwaterway4exerciseoutwater                  |
| NSWwaterway5exerciseoutwater                  |
| NSWwaterway1exerciseinwater                   |
| NSWwaterway2exerciseinwater                   |
| NSWwaterway3exerciseinwater                   |
| NSWwaterway4exerciseinwater                   |
| NSWwaterway5exerciseinwater                   |
| NSWwaterway1exercisealltypes                  |
| NSWwaterway2exercisealltypes                  |
| NSWwaterway3exercisealltypes                  |
| NSWwaterway4exercisealltypes                  |
| NSWwaterway1relaxing                          |
| NSWwaterway2relaxing                          |
| NSWwaterway3relaxing                          |
| NSWwaterway4relaxing                          |
| NSWwaterway5relaxing                          |
| NSWwaterway1fishing                           |
| NSWwaterway2fishing                           |
| NSWwaterway3fishing                           |
| NSWwaterway4fishing                           |
| NSWwaterway5fishing                           |
| NSWwaterway1boating                           |
| NSWwaterway2boating                           |
| NSWwaterway3boating                           |
| NSWwaterway4boating                           |
| NSWwaterway5boating                           |
| NSWwaterway1nrm                               |
| NSWwaterway2nrm                               |
| NSWwaterway3nrm                               |
| NSWwaterway4nrm                               |
| NSWwaterway5nrm                               |
| NSWwaterway1other                             |
| NSWwaterway2other                             |
| NSWwaterway3other                             |
| NSWwaterway4other                             |
| NSWwaterway5other                             |
| NSWwaterwayothdes                             |
| NSWwaterway1visitoften                        |
| NSWwaterway2visitoften                        |
| NSWwaterway3visitoften                        |
| NSWwaterway4visitoften                        |
| NSWwaterway5visitoften                        |
| NSWwaterway1envtlcondition                    |
| NSWwaterway2envtlcondition                    |
| NSWwaterway3envtlcondition                    |
| NSWwaterway4envtlcondition                    |
| NSWwaterway5envtlcondition                    |
| NSWwaterway1ewater                            |
| NSWwaterway2ewater                            |
| NSWwaterway3ewater                            |
| NSWwaterway4ewater                            |
| NSWwaterway5ewater                            |
| NSWwaterway1ewatersupport                     |
| NSWwaterway2ewatersupport                     |
| NSWwaterway3ewatersupport                     |
| NSWwaterway4ewatersupport                     |
| NSWwaterway5ewatersupport                     |
| cMDBPheardofPlan                              |
| cMDBPChangeCommHshld                          |
| cMDBP3cViews                                  |
| cMDBPBasinEnvtALL                             |
| cMDBPBasinEconomicALL                         |
| cMDBPBasinCommunALL                           |
| cMDBPBasinWholeALL                            |
| cMDBPMyHshld                                  |
| cMDBPBusiness                                 |
| cMDBPLocalComm                                |
| aMDBPLocalEnvtALL                             |
| cNRMdoingnow                                  |
| cNRMdonelast5years                            |
| cNRMdonemorethan5yearsago                     |
| cNRMneverdone                                 |
| cNRMonowndoingnow                             |
| cNRMonowndonelast5years                       |
| cNRMonowndonemorethan5yearsago                |
| cNRMonownneverdone                            |
| cNRMgovtgrantdoingnow                         |
| cNRMgovtgrantdonelast5years                   |
| cNRMgovtgrantdonemorethan5yearsago            |
| cNRMgovtgrantneverdone                        |
| cNRMlandcaredoingnow                          |
| cNRMlandcaredonelast5years                    |
| cNRMlandcaredonemorethan5yearsago             |
| cNRMlandcareneverdone                         |
| cNRMexpertadvicedoingnow                      |
| cNRMexpertadvicedonelast5years                |
| cNRMexpertadvicedonemorethan5yearsago         |
| cNRMexpertadviceneverdone                     |
| cNRMcourseworkshopdoingnow                    |
| cNRMcourseworkshopdonelast5years              |
| cNRMcourseworkshopdonemorethan5yearsago       |
| cNRMcourseworkshopneverdone                   |
| cNRMlocalhelpdoingnow                         |
| cNRMlocalhelpdonelast5years                   |
| cNRMlocalhelpdonemorethan5yearsago            |
| cNRMlocalhelpneverdone                        |
| cNRMtreesnearriparianYass                     |
| cNRMtreesnearriparianYnoass                   |
| cNRMtreesnearriparianNo                       |
| cNRMtreesawayriparianYass                     |
| cNRMtreesawayriparianYnoass                   |
| cNRMtreesawayriparianNo                       |
| cNRMtreesshadeshelterYass                     |
| cNRMtreesshadeshelterYnoass                   |
| cNRMtreesshadeshelterNo                       |
| cNRMfencedriparianYass                        |
| cNRMfencedriparianYnoass                      |
| cNRMfencedriparianNo                          |
| cNRMchggrazingforgroundcoverYass              |
| cNRMchggrazingforgroundcoverYnoass            |
| cNRMchggrazingforgroundcoverNo                |
| cNRMregenallnativevegYass                     |
| cNRMregenallnativevegYnoass                   |
| cNRMregenallnativevegNo                       |
| cNRMconscovenantYass                          |
| cNRMconscovenantYnoass                        |
| cNRMconscovenantNo                            |
| cNRMreduceferalsdistrictYass                  |
| cNRMreduceferalsdistrictYnoass                |
| cNRMreduceferalsdistrictNo                    |
| cNRMreduceweedsdistrictYass                   |
| cNRMreduceweedsdistrictYnoass                 |
| cNRMreduceweedsdistrictNo                     |
| cNRMusetechtoreducefuelchemfertYass           |
| cNRMusetechtoreducefuelchemfertYnoass         |
| cNRMusetechtoreducefuelchemfertNo             |
| cNRMregennativepastureYass                    |
| cNRMregennativepastureYnoass                  |
| cNRMregennativepastureNo                      |
| cNRMdeliverewaterYass                         |
| cNRMdeliverewaterYnoass                       |
| cNRMdeliverewaterNo                           |
| cFMREGENfarmplannrm                           |
| cFMREGENgroundcoverpriority                   |
| cFMREGENincreasediversity                     |
| cFMREGENmonitorregenobjectives                |
| cFMREGENnrmfarmprofit                         |
| cFMBIOSECprotect                              |
| cFMBIOSECriskmgt                              |
| cWKAGRlikelyremain                            |
| cWKAGRactivseekwork                           |
| cWKAGRlookjobnotfrm                           |
| cWKAGRcareerop                                |
| cWKAGRenjoywork                               |
| cWKAGRhourslong                               |
| cWKAGRpaygood                                 |
| cWKAGRaccommgood                              |
| cWKAGRcareerdev                               |
| cWKAGRskillsop                                |
| cWKAGRhoursflex                               |
| cWKAGRtimeoff                                 |
| cWKAGRgoodperks                               |
| cWKAGRgoodrelmanag                            |
| cWKAGRgoodrelwrkrs                            |
| cWKAGRgoodrelloccom                           |
| cWKAGRlifestylegood                           |
| cWKAGRfamconn                                 |
| cWKAGRinherit                                 |
| cAG2ownfarm                                   |
| cAG2mngbehalf                                 |
| cAG2helppartner                               |
| cAG2helpfamily                                |
| cFINRfrm                                      |
| cFDyearsfarmed                                |
| cFDareaowned                                  |
| cFDarealeased                                 |
| cFDareasharefarmed                            |
| cFDareamanagedother                           |
| cFDbusinessstructure                          |
| cFDempft                                      |
| cFDemppt                                      |
| cFDempptfte                                   |
| cFDempcas                                     |
| cFDempcasfte                                  |
| cFDirrigator                                  |
| cFDdrylandfarmer                              |
| cPROPWATERrivertrib                           |
| cPROPWATERwaterbody                           |
| cPROPWATERfloodplain                          |
| cPROPWATERrivertribname                       |
| cPROPWATERwaterbodyname                       |
| cPROPWATERfloodplainname                      |
| cPROPWATERrivertribh2ouse                     |
| cPROPWATERwaterbodyh2ouse                     |
| cPROPWATERfloodplainh2ouse                    |
| cFDmostimpbus                                 |
| cFDriceno                                     |
| cFDriceminor                                  |
| cFDricemajor                                  |
| cFDgrainoilseedno                             |
| cFDgrainoilseedminor                          |
| cFDgrainoilseedmajor                          |
| cFDfodderno                                   |
| cFDfodderminor                                |
| cFDfoddermajor                                |
| cFDcottonno                                   |
| cFDcottonminor                                |
| cFDcottonmajor                                |
| cFDwinegrapeno                                |
| cFDwinegrapeminor                             |
| cFDwinegrapemajor                             |
| cFDnutsno                                     |
| cFDnutsminor                                  |
| cFDnutsmajor                                  |
| cFDfruitno                                    |
| cFDfruitminor                                 |
| cFDfruitmajor                                 |
| cFDfruittype                                  |
| cFDvegetablesno                               |
| cFDvegetablesminor                            |
| cFDvegetablesmajor                            |
| cFDsheepmeatno                                |
| cFDsheepmeatminor                             |
| cFDsheepmeatmajor                             |
| cFDsheepwoolno                                |
| cFDsheepwoolminor                             |
| cFDsheepwoolmajor                             |
| cFDdairymilkno                                |
| cFDdairymilkminor                             |
| cFDdairymilkmajor                             |
| cFDextcattleno                                |
| cFDextcattleminor                             |
| cFDextcattlemajor                             |
| cFDfeedlotcattleno                            |
| cFDfeedlotcattleminor                         |
| cFDfeedlotcattlemajor                         |
| cFDpoultryno                                  |
| cFDpoultryminor                               |
| cFDpoultrymajor                               |
| cFDpigsno                                     |
| cFDpigsminor                                  |
| cFDpigsmajor                                  |
| cFDFDotherlivestockno                         |
| cFDFDotherlivestockminor                      |
| cFDFDotherlivestockmajor                      |
| cFDstorpackno                                 |
| cFDstorpackminor                              |
| cFDstorpackmajor                              |
| cFDhospno                                     |
| cFDhospminor                                  |
| cFDhospmajor                                  |
| cFDretailno                                   |
| cFDretailminor                                |
| cFDretailmajor                                |
| cFDotherno                                    |
| cFDotherminor                                 |
| cFDothermajor                                 |
| cFDsugarno                                    |
| cFDsugarminor                                 |
| cFDsugarmajor                                 |
| cFMALTNEWorganicorbiodynamic                  |
| cFMALTNEWholisticorregen                      |
| cFMALTNEWhighintensityrotgrazing              |
| cFMALTNEWgrazingcharts                        |
| cFMALTNEWzeromintillcrop                      |
| cFMALTNEWprecisioncrop                        |
| cFMALTNEWgmocrops                             |
| cFMALTNEWyrsorganicorbiodynamic               |
| cFMALTNEWyrsholisticorregen                   |
| cFMALTNEWyrshighintensityrotgrazing           |
| cFMALTNEWyrsgrazingcharts                     |
| cFMALTNEWyrszeromintillcrop                   |
| FMALTNEWyrsprecisioncrop                      |
| FMALTNEWyrsgmocrops                           |
| cFDincomefarmbus                              |
| cFDincomeofffarmwork                          |
| cFARMworkhours                                |
| cOFFFARMworkhoursown                          |
| cOFFFARMworkhoursspouse                       |
| cOFFFARMINCdaytodayexpenses                   |
| cOFFFARMINCwoulddoanyway                      |
| cFMPERFfinancialstress                        |
| cFMPERFsatisfied                              |
| cFMMKTnochoice                                |
| cFDgvap201415                                 |
| cFDlossprofit                                 |
| cFDBusCond                                    |
| cFDdebt                                       |
| cFDdebtservice                                |
| cFD12mthapplyloan                             |
| cFDcashflow                                   |
| cFMhardtimemostapp                            |
| cFMhardtimeleastapp                           |
| cFMASSISTtffp                                 |
| cFMASSISTffcl                                 |
| cFMASSISTdrtcl                                |
| cFMASSISTfha                                  |
| cFMASSISTfdebtmed                             |
| cFMASSISTrfcs                                 |
| cFMASSISTfmd                                  |
| cFMASSISTngohelpdifficuttimes                 |
| cFMASSISTwatinfreb                            |
| cFMASSISTcentrelinkother                      |
| cFMASSISTonlineorphone                        |
| cFMASSISTtffpuse                              |
| cFMASSISTffcluse                              |
| cFMASSISTdrtcluse                             |
| cFMASSISTfhause                               |
| cFMASSISTfdebtmeduse                          |
| cFMASSISTrfcsuse                              |
| cFMASSISTfmduse                               |
| cFMASSISTngohelpdifficuttimesuse              |
| cFMASSISTwatinfrebuse                         |
| cFMASSISTcentrelinkotheruse                   |
| cFMASSISTonlineorphoneuse                     |
| cFMPLANmgtbusobjectives                       |
| cFMPLANmgtbusplannotform                      |
| cFMPLANmgtbusplandrought                      |
| cFMPLANmgtbusplanassrisk                      |
| cFMPLANmgtbusplansucc                         |
| cFMPLANmgtbusplandisc                         |
| cFMPLANmgtbusplanmonitor                      |
| cFMPLANmgtbusplanreview                       |
| cFMPLANmgtbusplanhelpdec                      |
| cFMPLANmgtbusplanimpprod                      |
| cFMPLANmgtbusplanlikelyimp                    |
| cFMCONSULTpartner                             |
| cFMCONSULTchildren                            |
| cFMCONSULTotherfam                            |
| cFMCONSULTbuspart                             |
| cFMCONSULTagprof                              |
| cFMCONSULTfinexp                              |
| cFMCONSULTlawyer                              |
| cFMCONSULTlandcare                            |
| cFMCONSULTagorg                               |
| cFMCONSULTagext                               |
| cFMCONSULTothfarmers                          |
| cFMMGTlessirrig                               |
| cFMMGTmoreirrig                               |
| cFMMGTirrigefficiency                         |
| cFMMGTmoredryland                             |
| cFMMGTboughtland                              |
| cFMMGTleasednewland                           |
| cFMMGTsoldpartbusiness                        |
| cFMMGTleasedoutland                           |
| cFMMGTinvestmachinerytechinf                  |
| cFMMGTnewmarkets                              |
| cFMMGTchangedwhatproduce                      |
| cFMMGTchangedhowproduce                       |
| cFMMGTincreasedhours                          |
| cFMMGTreducedhours                            |
| cFMMGTmoreofffarmwork                         |
| cFMMGTsharedexpensesotherfarmers              |
| cFMMGTreducedinputs                           |
| cFMMGTpostponedinvestment                     |
| cFMMGTreducedworkers                          |
| cFMMGTreducedprofserv                         |
| cFMMGTreducedproduction                       |
| cFMMGTdestocked                               |
| cFMMGTstoppedwatering                         |
| cFMMGTdrewdownFMD                             |
| cFM5yrleave                                   |
| cFM5yrexpand                                  |
| cFM5yrdownsize                                |
| cFM5yrchangemix                               |
| cFM5yrchangebusstruct                         |
| cFM5yrmoreintense                             |
| cFM5yraddofffmwrk                             |
| cFM5yrredofffmwrk                             |
| cFMPREVrunbusdrought                          |
| cFMPREVrunbusnatdis                           |
| cFMPREVrunbuspest                             |
| cFMPREVrunbusriscost                          |
| cFMPREVrunbuslackdemand                       |
| cFMPREVrunbusfallprice                        |
| cFPREVrunbusenvreg                            |
| cFMPREVrunbusdifftrans                        |
| cFMPREVrunbusdifflab                          |
| cFMPREVrunbusredalloc                         |
| cFMPREVrunbusincpermwater                     |
| cFMPREVrunbusinctempwater                     |
| cFMPREVrunbuslacktelcomm                      |
| cFMPREVrunbusdiffaccfin                       |
| cFMLABOURsource                               |
| cFMLABOURrecruit                              |
| cFMLABOUReaserecruit                          |
| cFMLABOURoverseas                             |
| cFMLABOURoverseasnumber                       |
| cFMLABOURoverseaspercent                      |
| cFMLABOURfailtorecruit                        |
| cFMLABOURdiffseasonlowskill                   |
| cFMLABOURdiffseasonhighskill                  |
| cFMLABOURdiffpermlowskill                     |
| cFMLABOURdiffpermhighskill                    |
| cFMLABOURstopworkperformance                  |
| cFMLABOURstopworknowork                       |
| cFMLABOURstopworkvoluntarily                  |
| cFMLABOURstopworkna                           |
| cFMLABOURmgttraining                          |
| cFMLABOURmgtconfident                         |
| cFMLABOURmgtinvest                            |
| cFMLABOURmgtworklife                          |
| cFMLABOURmgtsafe                              |
| cFMLABOURmgtohstraining                       |
| cFMLABOURsafesector                           |
| cFDirrigchanntotalML201415                    |
| cFDirrigrivcrklake201415                      |
| cFDirriggroundwater201415                     |
| cFDirrigothersourceML201415                   |
| cFDirrigcarryoverML                           |
| cFDirrigallocationsoldML                      |
| cFDirrigallocationboughtML                    |
| cFDirrigdamtank201415                         |
| cWRAccessRights                               |
| cWReasytradetempwater                         |
| cWReasytradeentitlements                      |
| cWRwatermktfairforall                         |
| cWRconfidenttotrade                           |
| cWRrulechangesimproveconfidence               |
| cWRgovtsamerules                              |
| cWRmktrulesstable                             |
| cWRknowaccessinfo                             |
| cWReasyaccessinfo                             |
| cIRRIGentitlementonly                         |
| cIRRIGentbuyalloc                             |
| cIRRIGallocationonly                          |
| cIRRIGentregsellalloc                         |
| cIRRIGentoccsellalloc                         |
| cWTboughtentitlement                          |
| cWTgovtbuyback                                |
| cWTsoldentitlementnongovt                     |
| cWTboughtallocation                           |
| cWTsoldallocation                             |
| cWTsellentPOSITIVE                            |
| cWTsellentEASY                                |
| cWTsellentlackbuyer                           |
| cWTsellentlackmktinfo                         |
| cWTbuyentMOREEXPENSIVE                        |
| cWTbuyentPOSITIVE                             |
| cWTbuyentEASY                                 |
| cWTbuyentlackseller                           |
| cWTbuyentlackmktinfo                          |
| cWTsellallPOSITIVE                            |
| cWTsellallEASY                                |
| cWTsellalllackbuyer                           |
| cWTsellalllackmktinfo                         |
| WTbuyallEXPENSIVE                             |
| WTbuyallPOSITIVE                              |
| WTbuyallEASY                                  |
| cWTbuyallackseller                            |
| cWTbuyalllackmktinfo                          |
| TOBECODEDlater1                               |
| TOBECODEDlater2                               |
| TOBECODEDlater3                               |
| TOBECODEDlater4                               |
| TOBECODEDlater5                               |
| cFDirriginfupgrade                            |
| cFDirriginfupgradepercent                     |
| cFDirriginfupgradeyear                        |
| cFDirriginfselffunded                         |
| cFDirriginfgovtgrant                          |
| cFDirriginfgrantIIOorFO                       |
| cFDirriginfloanbankother                      |
| cFDirriginfother                              |
| cFDirriginfgrantSRWUIP                        |
| cFDirriginfgrantfedgovt                       |
| cFDirriginfgrantstategovt                     |
| cFDirriginfgrantNRMagency                     |
| cFDirriginfgrantwaterprovider                 |
| cFDirriginfgrantfarmingorg                    |
| cFDirriginfgrantother                         |
| cFDirriginfgrantdontknow                      |
| cFDirriginfwkH2Osystem                        |
| cFDirriginfwktechnology                       |
| cFDirriginfwklayoutdesign                     |
| cFDirriginfwkmgtequipment                     |
| cFDirriginfwkother                            |
| cFDirriginfwkothdes                           |
| cFDirriginfoutcomeworkload                    |
| cFDirriginfoutcomelabour                      |
| cFDirriginfoutcomeflexibility                 |
| cFDirriginfoutcomelocalupgrade                |
| cFDirriginfoutcomelocalmaintain               |
| cFDirriginfaffectfarm                         |
| cFDirriginfaffectprodyconstruction            |
| cFDirriginfaffectproductivity                 |
| cFDirriginfaffectprofitability                |
| cFDirriginfaffectfarmdebt                     |
| cFDirriginfaffectinputcosts                   |
| cFDirriginfaffectmaintexp                     |
| cFDirriginfaffectwaterefficiency              |
| cFDirriginfaffectwatertiming                  |
| cFDirriginfaffectpowercost                    |
| cFDwaterproviderupgrade2008                   |
| cFDwaterproviderupgradeYEAR                   |
| cFDwaterprovupgradeSRWUIP                     |
| cFDwaterprovupgradefedgovt                    |
| cFDwaterprovupgradestategovt                  |
| cFDwaterprovupgradeNRMagency                  |
| cFDwaterprovupgradewaterprovider              |
| cFDwaterprovupgradefarmingorg                 |
| cFDwaterprovupgradeother                      |
| cFDwaterprovupgradedontknow                   |
| cFDwaterprovupgradeoutcomelabour              |
| cFDwaterprovupgradeoutcomeflexibility         |
| cFDwaterprovupgradeoutcomelocalupgrade        |
| cFDwaterprovupgradeaffectfarm                 |
| cFDwaterprovupgradeaffectprody                |
| cFDwaterprovupgradeaffectprofitability        |
| cFDwaterprovupgradeaffectfarmdebt             |
| cFDwaterprovupgradeaffectinputcosts           |
| cFDwaterprovupgradeaffectwaterefficiency      |
| cFDwaterprovupgradeaffectwatertiming          |
| cFDwaterprovupgradeaffectwatercost            |
| cFDselltransferwaterent7yrs                   |
| cFDselltransferentyear1                       |
| cFDselltransferentpercent1                    |
| cFDselltransferentyear2                       |
| cFDselltransferentpercent2                    |
| cFDsellentoutcomeleftfarming                  |
| cFDsellentoutcomepayfarmdebt                  |
| cFDsellentoutcomeimprovefarm                  |
| cFDsellentoutcomeinfgrant                     |
| cFDsellentoutcomehshlddebt                    |
| cFDsellentoutcomebuyent                       |
| cFDsellentoutcomeother                        |
| cFDsellentwhatdid                             |
| cFDsellentaffectlife                          |
| cFDsellentaffectfarm                          |
| cFDsellentaffectfarmdebt                      |
| cFDsellentaffectprofitability                 |
| cFDsellentaffectstress                        |
| cFDsellentaffecthshldfinance                  |
| cFDsellentaffectworkload                      |
| cFDsellentaffectlocalcomm                     |
| cSURVHEARflyer                                |
| cSURVHEARemail                                |
| cSURVHEARnewsletter                           |
| cSURVHEARsocmedia                             |
| cSURVHEARtradmedia                            |
| cSURVHEARother                                |
| cSURVdoinfuture                               |
| cSURVlinkpermission                           |
| Notfarmer1DrylandFarmer2Irrigator3UnspecFmr4  |
| FarmerTypeSimple                              |
| GReg_Weight_NoEdu_Cut                         |
| cNATDISdrought12moAFFECTpers2                 |
| cNATDISdrought12moAFFECTjobbus2               |
| cNATDISdroughtAFFECThshld2                    |
| cNATDISdroughtAFFECTcommunity2                |

*** Step 1.3 set up dimensions
#+begin_src R :session *R* :tangle inst/doc/expore_RWS_main.R :exports none :eval yes
  dimensions_provided <- c("Notfarmer1DrylandFarmer2Irrigator3UnspecFmr4",
                           "SDgender",
                           "cSDage")
  #### make new dimension?
  dat$Notfarmer1DrylandFarmer2Irrigator3 <- recode(dat$Notfarmer1DrylandFarmer2Irrigator3UnspecFmr4,
    recodes = "'1'='1.Non-farmer';'2'='2.Dryland farmer';'3'='3.Irrigator';'4'='4.Unspecified farmer';'-999'='-999'")
  
  dat$SDgender2 <- recode(dat$SDgender,
    recodes = "'Female     '='1.Female';
    '     Male'='2.Male';
    '-999'='-999';
    'Other'='-999';
    '     Prefer not to answer'='-999'")
  
  dat$cSDage2 <- recode(dat$cSDage,
    recodes = "'Under 18 '='-999';18:39='18-39'; 40:54='40-54';55:64='55-64';65:96='65+';101='65+';-999='-999'")
    
  dat$cSDage3 <- recode(dat$cSDage,
    recodes = "'Under 18 '='-999';18:29='18-29'; 30:49='30-49';50:64='50-64';65:96='65+';101='65+';-999='-999'")
  
  
  dimensions  <- c("Notfarmer1DrylandFarmer2Irrigator3", "SDgender2", "cSDage2")
  names(dat)[which(names(dat) %in% dimensions)]
#+end_src

#+RESULTS:
| Notfarmer1DrylandFarmer2Irrigator3 |
| SDgender2                          |
| cSDage2                            |

*** Step 2 collect all relevant metadata 
#+begin_src R :session *R* :tangle inst/doc/expore_RWS_main.R :exports none :eval yes
  
  mainvars_df <- data.frame(var = c(mainvars, dimensions_provided))
  mainvars_df
  mainvars_df <- merge(mainvars_df, metadata, by.x = "var", by.y = "Variable name", all.x = T)
  nrow(mainvars_df)
  names(mainvars_df)
  
  mainvars_df <-  mainvars_df[, c('sortorder', 'var',
                  "Item stem - exact wording seen by respondents",
                  "Item - exact wording seen by respondent OR description of variable",
                  "Piping or display logic")]
  mainvars_df[is.na(mainvars_df$sortorder),"sortorder"] <- 99999
  mainvars_df <- mainvars_df[order(mainvars_df$sortorder),]
  mainvars_df[,c(1:2,4)]
#+end_src

#+RESULTS:
|   158 | SDgender                                     | Do you identify asâ€¦Select one Â    |
|   159 | cSDage                                       | Years:                            |
|   238 | cNATDISdrought12moAFFECTpers                 | You personally                    |
|   239 | cNATDISdrought12moAFFECTjobbus               | Your job/business (if applicable) |
|   240 | cNATDISdroughtAFFECThshld                    | Other members of your household   |
|   241 | cNATDISdroughtAFFECTcommunity                | Your local community              |
| 99999 | Notfarmer1DrylandFarmer2Irrigator3UnspecFmr4 | nil                               |


*** Step 4 do xtabs
#+begin_src R :session *R* :tangle no :exports none :eval yes
  mainvars2 <- paste(mainvars, 2, sep  = "")
                     mainvars2
  names(dat)[which(names(dat) %in% dimensions)]
  
  datout  <- xtab_variables_by_dimensions(dat = dat,
    pid = "cSURVID",
    variables = mainvars2,
    dimensions = dimensions,
    weights = "GReg_Weight_NoEdu_Cut")
  datout
  
  #dimensions
  
  dat$overall <- "Australia"
  
  datout  <- xtab_variables_by_dimensions(dat = dat,
    pid = "cSURVID",
    variables = c("cNATDISdroughthappen12mo",   "cNATDIScoldsnaphappen",
    "cNATDISheatwavehappen",
    "cNATDISbushfirehappen",
    "cNATDISseverestormcyclonehappen",
    "cNATDISfloodhappen"),
    dimensions = c("overall", "cGEOGSTE", "cSDage3"),
    weights = "GReg_Weight_NoEdu_Cut", 
    ci_prop = "Yes")
  datout
  ls()
  write.table(
  sprintf("Data generated on %s from datafile = '%s' using variables listed below.  Weights = '%s' from file: '%s'",
                    format(Sys.time(), "%d %b %Y %H:%M")
                               ,
                    infile_master
          ,
          "GReg_Weight_NoEdu_Cut",
                    infile_wts
                    )
    , "inst/doc/explore_RWS_out.csv", sep = ",", row.names = F, col.names = F)
  write.table(mainvars_df[,-1], "inst/doc/explore_RWS_out.csv", sep = ",", row.names = F, append=T)
  write.table(
  as.data.frame(matrix(rep("", ncol(datout)), nrow = 1))
    , "inst/doc/explore_RWS_out.csv", sep = ",", row.names = F, col.names = F, append = T)
  write.table(datout, "inst/doc/explore_RWS_out.csv", sep = ",", row.names = F, append = T)
  
#+end_src

*** COMMENT snip
#+begin_src R :session *R* :tangle no :exports none :eval no
  #### name:snip ####

  ## write.csv(d2,
  ##           sprintf("figures_and_tables/%s.csv", sectionlabel)
  ##           , row.names=F)
  ## dir()
  ## getwd()
  
  ## for(i in 1:length(mainvars)){
  ## #  mainvars
  ## #i=1
  ##   mainvar  <- mainvars[i]
  ## print(mainvar)
  ## d3out <- d2[d2$var == mainvar,]
  ## write.csv(d3out,
  ##           sprintf("figures_and_tables/%s_%s.csv", sectionlabel, mainvar)
  ##           , row.names=F)
  
  ## }
  ## names(d2)
  ## table(d2[,c("state","levels")])
  ## widen  <- d2[,c("var", "levels", "Freq")]
  ## widen
  
  ## library(reshape)
  ## wider  <- cast(widen, var ~ levels)
  ## wider
  
  ## write.csv(wider,
  ##           sprintf("figures_and_tables/%s_wide.csv", sectionlabel)
  ##           , row.names=F)
  



  ########################################################################################3
  # do
  d2out <- xtab_by_dimensions(
    dat = dat
    ,
    pid = "cSURVID"
    ,
    mainvar = "cNATDISdroughtAFFECTcommunity2" 
    ,
    dimension = "FarmerTypeSimple"
    ,
    weights = "GReg_Weight_NoEdu_Cut"
    ,
    recodes = NULL
    ,
    overall = TRUE
    ,
    extra_exclusions_mainvar = NULL 
    ,
    extra_exclusions_dimension = "''" 
    )
  
  d2out


    
  
  recodes = "0='0.No impact'; 1:3 = '1.Negative impact'; 4 = '2.Neither negative or positive'; 5:7 = '3.Positive impact'; -99 = '4.Dont know'"
  if(!is.null(recodes)){
  #### recode the mainvar  
  mainvar2  <- paste(mainvar, "2", sep = "")
  # TODO how to include/exclude extra like N/A?
  #if net 2 pos
  txt0 <- paste("datin$",mainvar2," <- car::recode(datin$",mainvar,", recodes = \"", recodes, "\")",
                sep = "")
  
  #if reduced - increased
  #  txt0 <- paste("datin$",mainvar2," <- recode(datin$",mainvar,", recodes = \"1:3 = '1.Reduced'; 4 = '2.Neither reduced or increased'; 5:7 = '3.Increased'; -99 = '4.Dont know'\")",
  #                sep = "")
  # if disagree-agree
  
  
  cat(txt0)
  eval(parse(text=txt0))
  datin[,mainvar2]  <- factor(datin[,mainvar2])
  #table(datin[,c(mainvar2, mainvar)])
  }
  
#+end_src

** proptest
https://stats.stackexchange.com/questions/224045/using-lm-for-2-sample-proportion-test
** rescale scales
(Card, N., Applied Meta-Analysis for Social Science Research, 2011, pg. 148).

As per this http://stats.stackexchange.com/questions/99325/transforming-scores-between-different-rating-scales-importance-of-response-opt
  # verify the formula
  x1 <- 1:5
  max2 <- 7
  min2 <- 1
  max1 <- 5
  min1 <- 1
  x2 <- (((x1 - min1)*(max2-min2))/(max1-min1))+min2
  x2
  #tail(cbind(x1,x2))
  #plot(x1, x2)

* Share
** apply value labels in R and write to SPSS
#+name:R-spss-variable-labels
#+begin_src R :session *R* :tangle no :exports reports :eval no
  ################################################################
  # name:R-spss-variable-labels
  # from http://stackoverflow.com/q/10181730
  # First I create a dummy dataset
  df <- data.frame(id = c(1:6), p.code = c(1, 5, 4, NA, 0, 5),  
                   p.label = c('Optometrists', 'Nurses', 'Financial analysts',
                   '<NA>', '0', 'Nurses'), foo = LETTERS[1:6])
  
  # Second, I add some variable labels using label from the Hmisc package
  # install.packages('Hmisc', dependencies = TRUE)
  library(Hmisc)
  label(df) <- "Sweet sweet data"
  label(df$id) <- "id !@#$%^" 
  label(df$p.label) <- "Profession with human readable information"
  label(df$p.code) <- "Profession code"
  label(df$foo) <- "Variable label for variable x.var"
  # modify the name of one varibes, just to see what happens when exported.
  names(df)[4] <- "New crazy name for 'foo'"
  
  attributes(df)$variable.labels
  
  # Third I export the data with write.foreign from the foreign package
  # install.packages('foreign', dependencies = TRUE)
  setwd('inst/extdata')
  library(foreign)
  write.foreign(df,"df.wf.txt","df.wf.sps",  package="SPSS")
  
  list.files()
  # [1] "df.wf.sps" "df.wf.txt"
  
  # from http://stackoverflow.com/a/10261534
  # Step 1: Make a backup of your data, just in case
  df.orig = df
  # Step 2: Load the following function
  get.var.labels = function(data) {
    a = do.call(llist, data)
    tempout = vector("list", length(a))
  
    for (i in 1:length(a)) {
      tempout[[i]] = label(a[[i]])
    }
    b = unlist(tempout)
    structure(c(b), .Names = names(data))
  }
  # Step 3: Apply the variable.label attributes
  attributes(df)$variable.labels = get.var.labels(df)
  # Step 4: Load the write.SPSS function available from
  # https://stat.ethz.ch/pipermail/r-help/2006-January/085941.html
  
  write.SPSS <- function (df, datafile, codefile, varnames = NULL)
    {
      adQuote <- function(x){paste("\"", x, "\"", sep = "")}
       dfn <- lapply(df, function(x) if (is.factor(x))
           as.numeric(x)
       else x)
       write.table(dfn, file = datafile, row = FALSE, col = FALSE)
       if(is.null(attributes(df)$variable.labels)) varlabels <- names(df) else varlabels <- attributes(df)$variable.labels
       if (is.null(varnames)) {
           varnames <- abbreviate(names(df), 8)
           if (any(sapply(varnames, nchar) > 8))
               stop("I cannot abbreviate the variable names to eight or fewer letters")
           if (any(varnames != names(df)))
               warning("some variable names were abbreviated")
       }
       cat("DATA LIST FILE=", dQuote(datafile), " free\n", file = codefile)
       cat("/", varnames, " .\n\n", file = codefile, append = TRUE)
       cat("VARIABLE LABELS\n", file = codefile, append = TRUE)
       cat(paste(varnames, adQuote(varlabels), "\n"), ".\n", file = codefile,
           append = TRUE)
       factors <- sapply(df, is.factor)
       if (any(factors)) {
           cat("\nVALUE LABELS\n", file = codefile, append = TRUE)
           for (v in which(factors)) {
               cat("/\n", file = codefile, append = TRUE)
               cat(varnames[v], " \n", file = codefile, append = TRUE)
               levs <- levels(df[[v]])
               cat(paste(1:length(levs), adQuote(levs), "\n", sep = " "),
                   file = codefile, append = TRUE)
           }
           cat(".\n", file = codefile, append = TRUE)
       }
       cat("\nEXECUTE.\n", file = codefile, append = TRUE)
    }
  
  # Step 5: Write your SPSS datafile and codefile
  write.SPSS(df, "df.sav", "df.sps")
  
  ## analyte  <- read.spss("df.sav", to.data.frame = T)
  ## Error in read.spss("df.sav", to.data.frame = T) : 
  ##   file 'df.sav' is not in any supported SPSS format
  
  
  
#+end_src
